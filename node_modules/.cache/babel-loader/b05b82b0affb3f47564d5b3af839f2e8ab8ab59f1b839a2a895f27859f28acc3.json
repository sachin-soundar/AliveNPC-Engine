{"ast":null,"code":"class NPCService {\n  formatNPCDisplay(npc, previousNpcs) {\n    const previousNpc = previousNpcs === null || previousNpcs === void 0 ? void 0 : previousNpcs.find(p => p.id === npc.id);\n    return {\n      ...npc,\n      displayData: {\n        hasChanges: this.hasSignificantChanges(npc, previousNpc),\n        traitChanges: this.getTraitChanges(npc, previousNpc),\n        relationshipChanges: this.getRelationshipChanges(npc, previousNpc)\n      }\n    };\n  }\n  hasSignificantChanges(current, previous) {\n    var _current$relationship, _previous$relationshi;\n    if (!previous) return false;\n\n    // Check trait changes\n    const traitThreshold = 5;\n    for (const trait in current.traits) {\n      if (Math.abs(current.traits[trait] - previous.traits[trait]) >= traitThreshold) {\n        return true;\n      }\n    }\n\n    // Check relationship changes\n    if (((_current$relationship = current.relationships) === null || _current$relationship === void 0 ? void 0 : _current$relationship.length) !== ((_previous$relationshi = previous.relationships) === null || _previous$relationshi === void 0 ? void 0 : _previous$relationshi.length)) {\n      return true;\n    }\n\n    // Check for relationship strength changes\n    for (const rel of current.relationships || []) {\n      var _previous$relationshi2;\n      const prevRel = (_previous$relationshi2 = previous.relationships) === null || _previous$relationshi2 === void 0 ? void 0 : _previous$relationshi2.find(r => r.character === rel.character);\n      if (!prevRel || Math.abs(rel.strength - prevRel.strength) >= 10) {\n        return true;\n      }\n    }\n\n    // Check action changes\n    if (current.current_action !== previous.current_action) {\n      return true;\n    }\n    return false;\n  }\n  getTraitChanges(current, previous) {\n    if (!previous) return {};\n    const changes = {};\n    for (const trait in current.traits) {\n      const diff = current.traits[trait] - previous.traits[trait];\n      if (Math.abs(diff) >= 1) {\n        changes[trait] = diff;\n      }\n    }\n    return changes;\n  }\n  getRelationshipChanges(current, previous) {\n    if (!previous) return {\n      added: [],\n      removed: [],\n      modified: []\n    };\n    const changes = {\n      added: [],\n      removed: [],\n      modified: []\n    };\n\n    // Find added relationships\n    for (const rel of current.relationships || []) {\n      var _previous$relationshi3;\n      const prevRel = (_previous$relationshi3 = previous.relationships) === null || _previous$relationshi3 === void 0 ? void 0 : _previous$relationshi3.find(r => r.character === rel.character);\n      if (!prevRel) {\n        changes.added.push(rel);\n      } else if (Math.abs(rel.strength - prevRel.strength) >= 5) {\n        changes.modified.push({\n          ...rel,\n          previousStrength: prevRel.strength\n        });\n      }\n    }\n\n    // Find removed relationships\n    for (const prevRel of previous.relationships || []) {\n      var _current$relationship2;\n      const currentRel = (_current$relationship2 = current.relationships) === null || _current$relationship2 === void 0 ? void 0 : _current$relationship2.find(r => r.character === prevRel.character);\n      if (!currentRel) {\n        changes.removed.push(prevRel);\n      }\n    }\n    return changes;\n  }\n  getGroupedStats(npcs) {\n    const stats = {\n      houses: {},\n      genders: {},\n      locations: {}\n    };\n    npcs.forEach(npc => {\n      // Count by house\n      stats.houses[npc.house] = (stats.houses[npc.house] || 0) + 1;\n\n      // Count by gender\n      stats.genders[npc.gender] = (stats.genders[npc.gender] || 0) + 1;\n\n      // Count by location\n      stats.locations[npc.location] = (stats.locations[npc.location] || 0) + 1;\n    });\n    return stats;\n  }\n  getHouseColor(house) {\n    const houseColors = {\n      'Stark': '#8B9DC3',\n      'Lannister': '#FFD700',\n      'Targaryen': '#8B0000',\n      'Baratheon': '#FFD700',\n      'Greyjoy': '#2F4F4F',\n      'Martell': '#FF8C00',\n      'Tyrell': '#228B22',\n      'Arryn': '#87CEEB',\n      'Tully': '#4682B4',\n      'Frey': '#696969',\n      'Bolton': '#8B0000',\n      'Mormont': '#8B4513',\n      'Reed': '#556B2F',\n      'Karstark': '#708090',\n      'Umber': '#2F4F4F'\n    };\n    return houseColors[house] || '#666666';\n  }\n  validateNPCData(npcs) {\n    if (!Array.isArray(npcs)) {\n      throw new Error('NPCs data must be an array');\n    }\n    for (const npc of npcs) {\n      if (!npc.id || !npc.name || !npc.house) {\n        throw new Error(`Invalid NPC data: missing required fields for ${npc.name || 'unknown'}`);\n      }\n      if (!npc.traits || typeof npc.traits !== 'object') {\n        throw new Error(`Invalid traits data for NPC ${npc.name}`);\n      }\n    }\n    return true;\n  }\n}\nexport default new NPCService();","map":{"version":3,"names":["NPCService","formatNPCDisplay","npc","previousNpcs","previousNpc","find","p","id","displayData","hasChanges","hasSignificantChanges","traitChanges","getTraitChanges","relationshipChanges","getRelationshipChanges","current","previous","_current$relationship","_previous$relationshi","traitThreshold","trait","traits","Math","abs","relationships","length","rel","_previous$relationshi2","prevRel","r","character","strength","current_action","changes","diff","added","removed","modified","_previous$relationshi3","push","previousStrength","_current$relationship2","currentRel","getGroupedStats","npcs","stats","houses","genders","locations","forEach","house","gender","location","getHouseColor","houseColors","validateNPCData","Array","isArray","Error","name"],"sources":["C:/Users/win10/Documents/GitHub/AliveNPC-Engine/src/services/npcService.js"],"sourcesContent":["class NPCService {\n  formatNPCDisplay(npc, previousNpcs) {\n    const previousNpc = previousNpcs?.find(p => p.id === npc.id);\n    \n    return {\n      ...npc,\n      displayData: {\n        hasChanges: this.hasSignificantChanges(npc, previousNpc),\n        traitChanges: this.getTraitChanges(npc, previousNpc),\n        relationshipChanges: this.getRelationshipChanges(npc, previousNpc)\n      }\n    };\n  }\n\n  hasSignificantChanges(current, previous) {\n    if (!previous) return false;\n    \n    // Check trait changes\n    const traitThreshold = 5;\n    for (const trait in current.traits) {\n      if (Math.abs(current.traits[trait] - previous.traits[trait]) >= traitThreshold) {\n        return true;\n      }\n    }\n    \n    // Check relationship changes\n    if (current.relationships?.length !== previous.relationships?.length) {\n      return true;\n    }\n    \n    // Check for relationship strength changes\n    for (const rel of current.relationships || []) {\n      const prevRel = previous.relationships?.find(r => r.character === rel.character);\n      if (!prevRel || Math.abs(rel.strength - prevRel.strength) >= 10) {\n        return true;\n      }\n    }\n    \n    // Check action changes\n    if (current.current_action !== previous.current_action) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getTraitChanges(current, previous) {\n    if (!previous) return {};\n    \n    const changes = {};\n    for (const trait in current.traits) {\n      const diff = current.traits[trait] - previous.traits[trait];\n      if (Math.abs(diff) >= 1) {\n        changes[trait] = diff;\n      }\n    }\n    return changes;\n  }\n\n  getRelationshipChanges(current, previous) {\n    if (!previous) return { added: [], removed: [], modified: [] };\n    \n    const changes = { added: [], removed: [], modified: [] };\n    \n    // Find added relationships\n    for (const rel of current.relationships || []) {\n      const prevRel = previous.relationships?.find(r => r.character === rel.character);\n      if (!prevRel) {\n        changes.added.push(rel);\n      } else if (Math.abs(rel.strength - prevRel.strength) >= 5) {\n        changes.modified.push({ ...rel, previousStrength: prevRel.strength });\n      }\n    }\n    \n    // Find removed relationships\n    for (const prevRel of previous.relationships || []) {\n      const currentRel = current.relationships?.find(r => r.character === prevRel.character);\n      if (!currentRel) {\n        changes.removed.push(prevRel);\n      }\n    }\n    \n    return changes;\n  }\n\n  getGroupedStats(npcs) {\n    const stats = {\n      houses: {},\n      genders: {},\n      locations: {}\n    };\n\n    npcs.forEach(npc => {\n      // Count by house\n      stats.houses[npc.house] = (stats.houses[npc.house] || 0) + 1;\n      \n      // Count by gender\n      stats.genders[npc.gender] = (stats.genders[npc.gender] || 0) + 1;\n      \n      // Count by location\n      stats.locations[npc.location] = (stats.locations[npc.location] || 0) + 1;\n    });\n\n    return stats;\n  }\n\n  getHouseColor(house) {\n    const houseColors = {\n      'Stark': '#8B9DC3',\n      'Lannister': '#FFD700',\n      'Targaryen': '#8B0000',\n      'Baratheon': '#FFD700',\n      'Greyjoy': '#2F4F4F',\n      'Martell': '#FF8C00',\n      'Tyrell': '#228B22',\n      'Arryn': '#87CEEB',\n      'Tully': '#4682B4',\n      'Frey': '#696969',\n      'Bolton': '#8B0000',\n      'Mormont': '#8B4513',\n      'Reed': '#556B2F',\n      'Karstark': '#708090',\n      'Umber': '#2F4F4F'\n    };\n    \n    return houseColors[house] || '#666666';\n  }\n\n  validateNPCData(npcs) {\n    if (!Array.isArray(npcs)) {\n      throw new Error('NPCs data must be an array');\n    }\n    \n    for (const npc of npcs) {\n      if (!npc.id || !npc.name || !npc.house) {\n        throw new Error(`Invalid NPC data: missing required fields for ${npc.name || 'unknown'}`);\n      }\n      \n      if (!npc.traits || typeof npc.traits !== 'object') {\n        throw new Error(`Invalid traits data for NPC ${npc.name}`);\n      }\n    }\n    \n    return true;\n  }\n}\n\nexport default new NPCService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}