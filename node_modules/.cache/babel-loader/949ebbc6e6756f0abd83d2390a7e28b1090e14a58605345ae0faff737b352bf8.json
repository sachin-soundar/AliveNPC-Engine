{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Documents\\\\GitHub\\\\LiveNPC Engine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [npcs, setNpcs] = useState([]);\n  const [worldEvents, setWorldEvents] = useState([]);\n  const [currentEventIndex, setCurrentEventIndex] = useState(0);\n  const [isAutoRunning, setIsAutoRunning] = useState(false);\n  const [timerInterval, setTimerInterval] = useState(15);\n  const [customEvent, setCustomEvent] = useState('');\n  const [showConfig, setShowConfig] = useState(false);\n  const [apiConfig, setApiConfig] = useState({\n    apiKey: '',\n    apiUrl: 'https://api.cerebras.ai/v1/chat/completions',\n    modelName: 'qwen-3-coder-480b'\n  });\n  const [isProcessingEvent, setIsProcessingEvent] = useState(false);\n  const [previousNpcs, setPreviousNpcs] = useState([]);\n  const [flashAnimation, setFlashAnimation] = useState(false);\n  const intervalRef = useRef(null);\n  const loadSampleData = useCallback(() => {\n    // Sample NPCs based on the schema\n    const sampleNpcs = [{\n      id: \"stark_001\",\n      name: \"Ser Gareth of House Stark\",\n      house: \"Stark\",\n      age: 34,\n      gender: \"male\",\n      role: \"knight\",\n      traits: {\n        honor: 82,\n        loyalty: 88,\n        intelligence: 65,\n        emotional_intelligence: 70,\n        evil: 12,\n        selflessness: 75,\n        ambition: 35,\n        combat_skill: 80,\n        political_cunning: 45,\n        religious_devotion: 65\n      },\n      relationships: [{\n        npc_id: \"stark_002\",\n        relationship_type: \"family\",\n        strength: 90\n      }, {\n        npc_id: \"stark_015\",\n        relationship_type: \"ally\",\n        strength: 75\n      }],\n      current_behavior: \"Patrolling the borders with quiet determination\",\n      location: \"Winterfell\",\n      status: \"alive\"\n    }];\n    const sampleEvents = [{\n      event_id: 1,\n      title: \"Lord Jon Arryn of House Arryn dies mysteriously\",\n      description: \"The Hand of the King dies suddenly, creating a power vacuum in King's Landing\",\n      political_context: {\n        house_stark: \"Ned Stark of House Stark reluctantly accepts Hand position, honor compels duty to realm\"\n      },\n      cascading_effects: [\"Power vacuum in King's Landing\", \"Stark family travels south\"]\n    }];\n    setNpcs(sampleNpcs);\n    setWorldEvents(sampleEvents);\n  }, []);\n  const loadDefaultData = useCallback(async () => {\n    try {\n      // Load NPCs\n      const npcResponse = await fetch('/dataset/npcs_100.json');\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || []);\n\n      // Load World Events\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n    } catch (error) {\n      console.error('Error loading default data:', error);\n      // Fallback to sample data if files not found\n      loadSampleData();\n    }\n  }, [loadSampleData]);\n\n  // Load default data on component mount\n  useEffect(() => {\n    loadDefaultData();\n  }, [loadDefaultData]);\n  const loadWorldQuest = async () => {\n    try {\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n      setCurrentEventIndex(0); // Reset to first event\n      console.log('World Quest loaded successfully');\n    } catch (error) {\n      console.error('Error loading world events:', error);\n      alert('Failed to load World Quest. Please check if world_events.json exists.');\n    }\n  };\n  const loadPersona = async () => {\n    try {\n      // Try loading 300 NPCs first, fallback to 100\n      let npcResponse;\n      try {\n        npcResponse = await fetch('/dataset/npcs_300.json');\n      } catch {\n        npcResponse = await fetch('/dataset/npcs_100.json');\n      }\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || []);\n      console.log('Persona data loaded successfully');\n    } catch (error) {\n      console.error('Error loading persona data:', error);\n      alert('Failed to load Persona data. Please check if NPC files exist.');\n    }\n  };\n  const restartWorld = () => {\n    setCurrentEventIndex(0);\n    setIsAutoRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    console.log('World restarted - reset to first event');\n  };\n  const updateNPCWithAI = async (npc, event) => {\n    const {\n      apiKey,\n      apiUrl,\n      modelName\n    } = apiConfig;\n    if (!apiKey || apiKey.trim() === '') {\n      console.warn('Cerebras API key not configured. Using fallback simulation.');\n      return simulateNPCUpdate(npc, event);\n    }\n    const prompt = `You are an expert AI agent simulating NPC evolution in a Game of Thrones universe. Update the NPC based on the world event, ensuring changes align with Westerosi lore, politics, and character archetypes. Use the empirical formula: NPC Persona (with current action) × World Event = New Action + Change in Persona.\n\nNPC Data (JSON schema-compliant):\n${JSON.stringify(npc, null, 2)}\n\nWorld Event:\n${event.title} - ${event.description}\n\nReason step by step:\n1. Assess impact: How does the event affect this NPC's house, role, location, status, traits, and relationships? Factor in traits (e.g., high evil amplifies malice, low loyalty risks defection).\n2. New Action: Craft a concise natural language description of updated mood/actions, grounded in lore. Use 'current_action' field instead of 'current_behavior'.\n3. Persona Changes: Adjust traits by -20 to +20 max (subtle shifts); modify relationship strengths by -30 to +30 or add/remove if logical; update location/status only if directly implied.\n4. Consistency: Avoid drastic overhauls—events ripple, not revolutionize. Preserve JSON schema integrity.\n\nOutput ONLY the updated NPC JSON. No extra text.`;\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: modelName,\n          messages: [{\n            role: \"system\",\n            content: \"You are an expert Game of Thrones NPC simulation engine. Always respond with valid JSON only.\"\n          }, {\n            role: \"user\",\n            content: prompt\n          }],\n          temperature: 0.7,\n          max_completion_tokens: 4000,\n          top_p: 0.8,\n          stream: false\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      const aiResponse = responseData.choices[0].message.content;\n\n      // Parse the AI response as JSON\n      try {\n        const updatedNpc = JSON.parse(aiResponse);\n        // Validate that essential fields are preserved\n        if (updatedNpc.id && updatedNpc.name && updatedNpc.house) {\n          return updatedNpc;\n        } else {\n          throw new Error('Invalid NPC structure returned by AI');\n        }\n      } catch (parseError) {\n        console.error('Failed to parse AI response as JSON:', parseError);\n        console.log('AI Response:', aiResponse);\n        return simulateNPCUpdate(npc, event);\n      }\n    } catch (error) {\n      console.error('Error calling Cerebras API:', error);\n      return simulateNPCUpdate(npc, event);\n    }\n  };\n  const simulateNPCUpdate = (npc, event) => {\n    // Fallback simulation when AI is not available\n    const updatedNpc = {\n      ...npc\n    };\n\n    // Simulate trait changes based on event\n    if (event.title.includes('dies') || event.title.includes('executed')) {\n      updatedNpc.traits.honor = Math.max(0, Math.min(100, updatedNpc.traits.honor + (Math.random() * 20 - 10)));\n      updatedNpc.traits.loyalty = Math.max(0, Math.min(100, updatedNpc.traits.loyalty + (Math.random() * 15 - 5)));\n      updatedNpc.current_action = `Reacting to recent tragic events with ${updatedNpc.traits.honor > 70 ? 'righteous anger' : 'calculated caution'}`;\n    } else if (event.title.includes('war') || event.title.includes('battle')) {\n      updatedNpc.traits.ambition = Math.max(0, Math.min(100, updatedNpc.traits.ambition + (Math.random() * 15 - 5)));\n      updatedNpc.current_action = `Preparing for the conflicts ahead with ${updatedNpc.traits.ambition > 70 ? 'eager anticipation' : 'cautious planning'}`;\n    } else {\n      updatedNpc.traits.intelligence = Math.max(0, Math.min(100, updatedNpc.traits.intelligence + (Math.random() * 10 - 5)));\n      updatedNpc.current_action = `Adapting to changing circumstances with ${updatedNpc.traits.intelligence > 70 ? 'strategic thinking' : 'careful observation'}`;\n    }\n    return updatedNpc;\n  };\n  const processNextEvent = async () => {\n    if (currentEventIndex >= worldEvents.length) {\n      setIsAutoRunning(false);\n      return;\n    }\n\n    // Start loading animation\n    setIsProcessingEvent(true);\n\n    // Store previous NPC data before updating\n    setPreviousNpcs([...npcs]);\n    const currentEvent = worldEvents[currentEventIndex];\n    const updatedNpcs = [];\n    for (const npc of npcs) {\n      const updatedNpc = await updateNPCWithAI(npc, currentEvent);\n      updatedNpcs.push(updatedNpc);\n    }\n\n    // Update NPCs and trigger flash animation\n    setNpcs(updatedNpcs);\n    setCurrentEventIndex(prev => prev + 1);\n\n    // End loading animation\n    setIsProcessingEvent(false);\n\n    // Trigger flash animation for new data\n    setFlashAnimation(true);\n    setTimeout(() => setFlashAnimation(false), 1000);\n  };\n  const startAutoRun = () => {\n    setIsAutoRunning(true);\n    intervalRef.current = setInterval(() => {\n      processNextEvent();\n    }, timerInterval * 1000);\n  };\n  const stopAutoRun = () => {\n    setIsAutoRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n  };\n  const sendCustomEvent = async () => {\n    if (!customEvent.trim()) return;\n    const event = {\n      event_id: 999,\n      title: customEvent,\n      description: \"Custom event triggered by user\",\n      political_context: {},\n      cascading_effects: []\n    };\n    const updatedNpcs = [];\n    for (const npc of npcs) {\n      const updatedNpc = await updateNPCWithAI(npc, event);\n      updatedNpcs.push(updatedNpc);\n    }\n    setNpcs(updatedNpcs);\n    setCustomEvent('');\n  };\n  const formatNPCDisplay = npc => {\n    const traits = npc.traits;\n    const relationships = npc.relationships || [];\n    const relationshipText = relationships.map(rel => `👨‍👦 ${rel.npc_id} ${rel.relationship_type} Str${rel.strength}`).join(' ') || '';\n    const genderIcon = npc.gender === 'male' ? '👨M' : '👩F';\n    const houseShort = npc.house.replace('House ', '');\n\n    // Find previous data for this NPC\n    const previousNpc = previousNpcs.find(prevNpc => prevNpc.id === npc.id);\n    const formatTooltipData = npcData => {\n      if (!npcData) return 'No previous data available';\n      const prevTraits = npcData.traits;\n      return `Previous State:\\nHonor: ${prevTraits.honor} Loyal: ${prevTraits.loyalty} IQ: ${prevTraits.intelligence} EQ: ${prevTraits.emotional_intelligence}\\nEvil: ${prevTraits.evil} Selfless: ${prevTraits.selflessness} Ambition: ${prevTraits.ambition}\\nCombat: ${prevTraits.combat_skill} Political: ${prevTraits.political_cunning} Religion: ${prevTraits.religious_devotion}\\nLocation: ${npcData.location || 'Unknown'} Status: ${npcData.status}\\nBehavior: ${npcData.current_action || npcData.current_behavior || 'Idle'}`;\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"npc-card-two-line\",\n      title: formatTooltipData(previousNpc),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-line-1\",\n        children: [\"id: \", npc.id, \" name: \", npc.name, \" \\uD83C\\uDFE0 \", houseShort, \" \\uD83D\\uDD1E\", npc.age, \" \", genderIcon, \" \\uD83D\\uDCBC \", npc.role, \" | Honor: \", traits.honor, \" Loyal: \", traits.loyalty, \" IQ: \", traits.intelligence, \" EQ: \", traits.emotional_intelligence, \" Evil: \", traits.evil, \" Selfless: \", traits.selflessness, \" Ambition: \", traits.ambition, \" Combat: \", traits.combat_skill, \" Political: \", traits.political_cunning, \" Religion: \", traits.religious_devotion, \" \", relationshipText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-line-2\",\n        children: [\"\\uD83C\\uDF0D \", npc.location || 'Unknown', \" \\uD83D\\uDFE2 \", npc.status, \" Current_Behavior: \", npc.current_action || npc.current_behavior || 'Idle']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, npc.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this);\n  };\n  const getGroupedStats = () => {\n    const houseStats = {};\n    const genderStats = {};\n    const locationStats = {};\n    npcs.forEach(npc => {\n      const house = npc.house.replace('House ', '');\n      houseStats[house] = (houseStats[house] || 0) + 1;\n      genderStats[npc.gender] = (genderStats[npc.gender] || 0) + 1;\n      const location = npc.location || 'Unknown';\n      locationStats[location] = (locationStats[location] || 0) + 1;\n    });\n    return {\n      houseStats,\n      genderStats,\n      locationStats\n    };\n  };\n  const {\n    houseStats,\n    genderStats,\n    locationStats\n  } = getGroupedStats();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Live NPC Engine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadWorldQuest,\n          className: \"load-btn\",\n          children: \"\\uD83D\\uDCDC Load World Quest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadPersona,\n          className: \"load-btn\",\n          children: \"\\uD83D\\uDC65 Load Persona\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartWorld,\n          className: \"restart-btn\",\n          children: \"\\uD83D\\uDD04 Restart World\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfig(true),\n          className: \"config-btn\",\n          children: \"\\u2699\\uFE0F AI Engine Config\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), showConfig && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"config-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI Engine Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Cerebras API Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: apiConfig.apiKey,\n              onChange: e => setApiConfig({\n                ...apiConfig,\n                apiKey: e.target.value\n              }),\n              placeholder: \"Enter your Cerebras API key\",\n              className: \"config-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"API URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: apiConfig.apiUrl,\n              onChange: e => setApiConfig({\n                ...apiConfig,\n                apiUrl: e.target.value\n              }),\n              className: \"config-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Model Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: apiConfig.modelName,\n              onChange: e => setApiConfig({\n                ...apiConfig,\n                modelName: e.target.value\n              }),\n              className: \"config-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"qwen-3-coder-480b\",\n                children: \"Qwen 3 Coder 480B (Recommended)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"llama3.1-70b\",\n                children: \"Llama 3.1 70B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"llama3.1-8b\",\n                children: \"Llama 3.1 8B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"qwen2.5-72b\",\n                children: \"Qwen 2.5 72B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-status\",\n            children: apiConfig.apiKey ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-connected\",\n              children: \"\\uD83D\\uDFE2 API Key Configured\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-disconnected\",\n              children: \"\\uD83D\\uDD34 API Key Required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowConfig(false),\n            className: \"config-save-btn\",\n            children: \"Save & Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowConfig(false),\n            className: \"config-cancel-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"NPCs (\", npcs.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Houses:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), \" \", Object.entries(houseStats).map(([house, count]) => `${house}(${count})`).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gender:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), \" \", Object.entries(genderStats).map(([gender, count]) => `${gender}(${count})`).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Locations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), \" \", Object.entries(locationStats).map(([location, count]) => `${location}(${count})`).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"npc-list\",\n          children: npcs.map(npc => formatNPCDisplay(npc))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"world-events-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"World Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-controls\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Auto Timer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: timerInterval,\n                  onChange: e => setTimerInterval(parseInt(e.target.value)),\n                  min: \"5\",\n                  max: \"300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 19\n                }, this), \" sec\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (currentEventIndex === 0) {\n                    processNextEvent();\n                  }\n                },\n                className: \"manual-start-btn\",\n                children: \"\\uD83D\\uDE80 Manual Start Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this), !isAutoRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: startAutoRun,\n                className: \"start-btn\",\n                children: \"\\u25B6\\uFE0F Auto Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: stopAutoRun,\n                className: \"stop-btn\",\n                children: \"\\u23F8\\uFE0F Pause Auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: processNextEvent,\n                className: \"next-btn\",\n                children: \"\\u23ED\\uFE0F Next Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-event\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Custom event...\",\n                value: customEvent,\n                onChange: e => setCustomEvent(e.target.value),\n                className: \"custom-event-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: sendCustomEvent,\n                className: \"send-btn\",\n                children: \"\\uD83D\\uDCE4 Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-stack\",\n            children: worldEvents.map((event, index) => {\n              let statusClass = 'event-pending';\n              if (index < currentEventIndex) {\n                statusClass = 'event-completed';\n              } else if (index === currentEventIndex) {\n                statusClass = 'event-running';\n              }\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `event-card-stack ${statusClass}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"event-number\",\n                    children: [\"#\", event.event_id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"event-status-indicator\",\n                    children: index < currentEventIndex ? '✅' : index === currentEventIndex ? '🔄' : '⏳'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-title\",\n                  children: event.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-description\",\n                  children: event.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 21\n                }, this)]\n              }, event.event_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Gn1VVAQsIDVPf+n8xm8pBUVKxJU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","App","_s","npcs","setNpcs","worldEvents","setWorldEvents","currentEventIndex","setCurrentEventIndex","isAutoRunning","setIsAutoRunning","timerInterval","setTimerInterval","customEvent","setCustomEvent","showConfig","setShowConfig","apiConfig","setApiConfig","apiKey","apiUrl","modelName","isProcessingEvent","setIsProcessingEvent","previousNpcs","setPreviousNpcs","flashAnimation","setFlashAnimation","intervalRef","loadSampleData","sampleNpcs","id","name","house","age","gender","role","traits","honor","loyalty","intelligence","emotional_intelligence","evil","selflessness","ambition","combat_skill","political_cunning","religious_devotion","relationships","npc_id","relationship_type","strength","current_behavior","location","status","sampleEvents","event_id","title","description","political_context","house_stark","cascading_effects","loadDefaultData","npcResponse","fetch","npcData","json","eventsResponse","eventsData","world_events","error","console","loadWorldQuest","log","alert","loadPersona","restartWorld","current","clearInterval","updateNPCWithAI","npc","event","trim","warn","simulateNPCUpdate","prompt","JSON","stringify","response","method","headers","body","model","messages","content","temperature","max_completion_tokens","top_p","stream","ok","Error","responseData","aiResponse","choices","message","updatedNpc","parse","parseError","includes","Math","max","min","random","current_action","processNextEvent","length","currentEvent","updatedNpcs","push","prev","setTimeout","startAutoRun","setInterval","stopAutoRun","sendCustomEvent","formatNPCDisplay","relationshipText","map","rel","join","genderIcon","houseShort","replace","previousNpc","find","prevNpc","formatTooltipData","prevTraits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getGroupedStats","houseStats","genderStats","locationStats","forEach","onClick","type","value","onChange","e","target","placeholder","Object","entries","count","parseInt","index","statusClass","_c","$RefreshReg$"],"sources":["C:/Users/win10/Documents/GitHub/LiveNPC Engine/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [npcs, setNpcs] = useState([]);\n  const [worldEvents, setWorldEvents] = useState([]);\n  const [currentEventIndex, setCurrentEventIndex] = useState(0);\n  const [isAutoRunning, setIsAutoRunning] = useState(false);\n  const [timerInterval, setTimerInterval] = useState(15);\n  const [customEvent, setCustomEvent] = useState('');\n  const [showConfig, setShowConfig] = useState(false);\n  const [apiConfig, setApiConfig] = useState({\n    apiKey: '',\n    apiUrl: 'https://api.cerebras.ai/v1/chat/completions',\n    modelName: 'qwen-3-coder-480b'\n  });\n  const [isProcessingEvent, setIsProcessingEvent] = useState(false);\n  const [previousNpcs, setPreviousNpcs] = useState([]);\n  const [flashAnimation, setFlashAnimation] = useState(false);\n  const intervalRef = useRef(null);\n\n  const loadSampleData = useCallback(() => {\n    // Sample NPCs based on the schema\n    const sampleNpcs = [\n      {\n        id: \"stark_001\",\n        name: \"Ser Gareth of House Stark\",\n        house: \"Stark\",\n        age: 34,\n        gender: \"male\",\n        role: \"knight\",\n        traits: {\n          honor: 82,\n          loyalty: 88,\n          intelligence: 65,\n          emotional_intelligence: 70,\n          evil: 12,\n          selflessness: 75,\n          ambition: 35,\n          combat_skill: 80,\n          political_cunning: 45,\n          religious_devotion: 65\n        },\n        relationships: [\n          { npc_id: \"stark_002\", relationship_type: \"family\", strength: 90 },\n          { npc_id: \"stark_015\", relationship_type: \"ally\", strength: 75 }\n        ],\n        current_behavior: \"Patrolling the borders with quiet determination\",\n        location: \"Winterfell\",\n        status: \"alive\"\n      }\n    ];\n\n    const sampleEvents = [\n      {\n        event_id: 1,\n        title: \"Lord Jon Arryn of House Arryn dies mysteriously\",\n        description: \"The Hand of the King dies suddenly, creating a power vacuum in King's Landing\",\n        political_context: {\n          house_stark: \"Ned Stark of House Stark reluctantly accepts Hand position, honor compels duty to realm\"\n        },\n        cascading_effects: [\"Power vacuum in King's Landing\", \"Stark family travels south\"]\n      }\n    ];\n\n    setNpcs(sampleNpcs);\n    setWorldEvents(sampleEvents);\n  }, []);\n\n  const loadDefaultData = useCallback(async () => {\n    try {\n      // Load NPCs\n      const npcResponse = await fetch('/dataset/npcs_100.json');\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || []);\n\n      // Load World Events\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n    } catch (error) {\n      console.error('Error loading default data:', error);\n      // Fallback to sample data if files not found\n      loadSampleData();\n    }\n  }, [loadSampleData]);\n\n  // Load default data on component mount\n  useEffect(() => {\n    loadDefaultData();\n  }, [loadDefaultData]);\n\n  const loadWorldQuest = async () => {\n    try {\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n      setCurrentEventIndex(0); // Reset to first event\n      console.log('World Quest loaded successfully');\n    } catch (error) {\n      console.error('Error loading world events:', error);\n      alert('Failed to load World Quest. Please check if world_events.json exists.');\n    }\n  };\n\n  const loadPersona = async () => {\n    try {\n      // Try loading 300 NPCs first, fallback to 100\n      let npcResponse;\n      try {\n        npcResponse = await fetch('/dataset/npcs_300.json');\n      } catch {\n        npcResponse = await fetch('/dataset/npcs_100.json');\n      }\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || []);\n      console.log('Persona data loaded successfully');\n    } catch (error) {\n      console.error('Error loading persona data:', error);\n      alert('Failed to load Persona data. Please check if NPC files exist.');\n    }\n  };\n\n  const restartWorld = () => {\n    setCurrentEventIndex(0);\n    setIsAutoRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    console.log('World restarted - reset to first event');\n  };\n\n  const updateNPCWithAI = async (npc, event) => {\n    const { apiKey, apiUrl, modelName } = apiConfig;\n\n    if (!apiKey || apiKey.trim() === '') {\n      console.warn('Cerebras API key not configured. Using fallback simulation.');\n      return simulateNPCUpdate(npc, event);\n    }\n\n    const prompt = `You are an expert AI agent simulating NPC evolution in a Game of Thrones universe. Update the NPC based on the world event, ensuring changes align with Westerosi lore, politics, and character archetypes. Use the empirical formula: NPC Persona (with current action) × World Event = New Action + Change in Persona.\n\nNPC Data (JSON schema-compliant):\n${JSON.stringify(npc, null, 2)}\n\nWorld Event:\n${event.title} - ${event.description}\n\nReason step by step:\n1. Assess impact: How does the event affect this NPC's house, role, location, status, traits, and relationships? Factor in traits (e.g., high evil amplifies malice, low loyalty risks defection).\n2. New Action: Craft a concise natural language description of updated mood/actions, grounded in lore. Use 'current_action' field instead of 'current_behavior'.\n3. Persona Changes: Adjust traits by -20 to +20 max (subtle shifts); modify relationship strengths by -30 to +30 or add/remove if logical; update location/status only if directly implied.\n4. Consistency: Avoid drastic overhauls—events ripple, not revolutionize. Preserve JSON schema integrity.\n\nOutput ONLY the updated NPC JSON. No extra text.`;\n\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: modelName,\n          messages: [\n            {\n              role: \"system\",\n              content: \"You are an expert Game of Thrones NPC simulation engine. Always respond with valid JSON only.\"\n            },\n            {\n              role: \"user\",\n              content: prompt\n            }\n          ],\n          temperature: 0.7,\n          max_completion_tokens: 4000,\n          top_p: 0.8,\n          stream: false\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const responseData = await response.json();\n      const aiResponse = responseData.choices[0].message.content;\n      \n      // Parse the AI response as JSON\n      try {\n        const updatedNpc = JSON.parse(aiResponse);\n        // Validate that essential fields are preserved\n        if (updatedNpc.id && updatedNpc.name && updatedNpc.house) {\n          return updatedNpc;\n        } else {\n          throw new Error('Invalid NPC structure returned by AI');\n        }\n      } catch (parseError) {\n        console.error('Failed to parse AI response as JSON:', parseError);\n        console.log('AI Response:', aiResponse);\n        return simulateNPCUpdate(npc, event);\n      }\n    } catch (error) {\n      console.error('Error calling Cerebras API:', error);\n      return simulateNPCUpdate(npc, event);\n    }\n  };\n\n  const simulateNPCUpdate = (npc, event) => {\n    // Fallback simulation when AI is not available\n    const updatedNpc = { ...npc };\n    \n    // Simulate trait changes based on event\n    if (event.title.includes('dies') || event.title.includes('executed')) {\n      updatedNpc.traits.honor = Math.max(0, Math.min(100, updatedNpc.traits.honor + (Math.random() * 20 - 10)));\n      updatedNpc.traits.loyalty = Math.max(0, Math.min(100, updatedNpc.traits.loyalty + (Math.random() * 15 - 5)));\n      updatedNpc.current_action = `Reacting to recent tragic events with ${updatedNpc.traits.honor > 70 ? 'righteous anger' : 'calculated caution'}`;\n    } else if (event.title.includes('war') || event.title.includes('battle')) {\n      updatedNpc.traits.ambition = Math.max(0, Math.min(100, updatedNpc.traits.ambition + (Math.random() * 15 - 5)));\n      updatedNpc.current_action = `Preparing for the conflicts ahead with ${updatedNpc.traits.ambition > 70 ? 'eager anticipation' : 'cautious planning'}`;\n    } else {\n      updatedNpc.traits.intelligence = Math.max(0, Math.min(100, updatedNpc.traits.intelligence + (Math.random() * 10 - 5)));\n      updatedNpc.current_action = `Adapting to changing circumstances with ${updatedNpc.traits.intelligence > 70 ? 'strategic thinking' : 'careful observation'}`;\n    }\n\n    return updatedNpc;\n  };\n\n  const processNextEvent = async () => {\n    if (currentEventIndex >= worldEvents.length) {\n      setIsAutoRunning(false);\n      return;\n    }\n\n    // Start loading animation\n    setIsProcessingEvent(true);\n    \n    // Store previous NPC data before updating\n    setPreviousNpcs([...npcs]);\n\n    const currentEvent = worldEvents[currentEventIndex];\n    const updatedNpcs = [];\n\n    for (const npc of npcs) {\n      const updatedNpc = await updateNPCWithAI(npc, currentEvent);\n      updatedNpcs.push(updatedNpc);\n    }\n\n    // Update NPCs and trigger flash animation\n    setNpcs(updatedNpcs);\n    setCurrentEventIndex(prev => prev + 1);\n    \n    // End loading animation\n    setIsProcessingEvent(false);\n    \n    // Trigger flash animation for new data\n    setFlashAnimation(true);\n    setTimeout(() => setFlashAnimation(false), 1000);\n  };\n\n  const startAutoRun = () => {\n    setIsAutoRunning(true);\n    intervalRef.current = setInterval(() => {\n      processNextEvent();\n    }, timerInterval * 1000);\n  };\n\n  const stopAutoRun = () => {\n    setIsAutoRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n  };\n\n  const sendCustomEvent = async () => {\n    if (!customEvent.trim()) return;\n\n    const event = {\n      event_id: 999,\n      title: customEvent,\n      description: \"Custom event triggered by user\",\n      political_context: {},\n      cascading_effects: []\n    };\n\n    const updatedNpcs = [];\n    for (const npc of npcs) {\n      const updatedNpc = await updateNPCWithAI(npc, event);\n      updatedNpcs.push(updatedNpc);\n    }\n\n    setNpcs(updatedNpcs);\n    setCustomEvent('');\n  };\n\n  const formatNPCDisplay = (npc) => {\n    const traits = npc.traits;\n    const relationships = npc.relationships || [];\n    const relationshipText = relationships\n      .map(rel => `👨‍👦 ${rel.npc_id} ${rel.relationship_type} Str${rel.strength}`)\n      .join(' ') || '';\n    \n    const genderIcon = npc.gender === 'male' ? '👨M' : '👩F';\n    const houseShort = npc.house.replace('House ', '');\n    \n    // Find previous data for this NPC\n    const previousNpc = previousNpcs.find(prevNpc => prevNpc.id === npc.id);\n    \n    const formatTooltipData = (npcData) => {\n      if (!npcData) return 'No previous data available';\n      const prevTraits = npcData.traits;\n      return `Previous State:\\nHonor: ${prevTraits.honor} Loyal: ${prevTraits.loyalty} IQ: ${prevTraits.intelligence} EQ: ${prevTraits.emotional_intelligence}\\nEvil: ${prevTraits.evil} Selfless: ${prevTraits.selflessness} Ambition: ${prevTraits.ambition}\\nCombat: ${prevTraits.combat_skill} Political: ${prevTraits.political_cunning} Religion: ${prevTraits.religious_devotion}\\nLocation: ${npcData.location || 'Unknown'} Status: ${npcData.status}\\nBehavior: ${npcData.current_action || npcData.current_behavior || 'Idle'}`;\n    };\n    \n    return (\n      <div \n        key={npc.id} \n        className=\"npc-card-two-line\" \n        title={formatTooltipData(previousNpc)}\n      >\n        <div className=\"npc-line-1\">\n          id: {npc.id} name: {npc.name} 🏠 {houseShort} 🔞{npc.age} {genderIcon} 💼 {npc.role} | Honor: {traits.honor} Loyal: {traits.loyalty} IQ: {traits.intelligence} EQ: {traits.emotional_intelligence} Evil: {traits.evil} Selfless: {traits.selflessness} Ambition: {traits.ambition} Combat: {traits.combat_skill} Political: {traits.political_cunning} Religion: {traits.religious_devotion} {relationshipText}\n        </div>\n        <div className=\"npc-line-2\">\n          🌍 {npc.location || 'Unknown'} 🟢 {npc.status} Current_Behavior: {npc.current_action || npc.current_behavior || 'Idle'}\n        </div>\n      </div>\n    );\n  };\n\n  const getGroupedStats = () => {\n    const houseStats = {};\n    const genderStats = {};\n    const locationStats = {};\n    \n    npcs.forEach(npc => {\n      const house = npc.house.replace('House ', '');\n      houseStats[house] = (houseStats[house] || 0) + 1;\n      genderStats[npc.gender] = (genderStats[npc.gender] || 0) + 1;\n      const location = npc.location || 'Unknown';\n      locationStats[location] = (locationStats[location] || 0) + 1;\n    });\n    \n    return { houseStats, genderStats, locationStats };\n  };\n\n  const { houseStats, genderStats, locationStats } = getGroupedStats();\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Live NPC Engine</h1>\n        <div className=\"header-buttons\">\n          <button onClick={loadWorldQuest} className=\"load-btn\">\n            📜 Load World Quest\n          </button>\n          <button onClick={loadPersona} className=\"load-btn\">\n            👥 Load Persona\n          </button>\n          <button onClick={restartWorld} className=\"restart-btn\">\n            🔄 Restart World\n          </button>\n          <button onClick={() => setShowConfig(true)} className=\"config-btn\">\n            ⚙️ AI Engine Config\n          </button>\n        </div>\n      </header>\n\n      {showConfig && (\n        <div className=\"config-modal\">\n          <div className=\"config-content\">\n            <h3>AI Engine Configuration</h3>\n            <div className=\"config-form\">\n              <div className=\"config-field\">\n                <label>Cerebras API Key:</label>\n                <input\n                  type=\"password\"\n                  value={apiConfig.apiKey}\n                  onChange={(e) => setApiConfig({...apiConfig, apiKey: e.target.value})}\n                  placeholder=\"Enter your Cerebras API key\"\n                  className=\"config-input\"\n                />\n              </div>\n              <div className=\"config-field\">\n                <label>API URL:</label>\n                <input\n                  type=\"text\"\n                  value={apiConfig.apiUrl}\n                  onChange={(e) => setApiConfig({...apiConfig, apiUrl: e.target.value})}\n                  className=\"config-input\"\n                />\n              </div>\n              <div className=\"config-field\">\n                <label>Model Name:</label>\n                <select\n                  value={apiConfig.modelName}\n                  onChange={(e) => setApiConfig({...apiConfig, modelName: e.target.value})}\n                  className=\"config-select\"\n                >\n                  <option value=\"qwen-3-coder-480b\">Qwen 3 Coder 480B (Recommended)</option>\n                  <option value=\"llama3.1-70b\">Llama 3.1 70B</option>\n                  <option value=\"llama3.1-8b\">Llama 3.1 8B</option>\n                  <option value=\"qwen2.5-72b\">Qwen 2.5 72B</option>\n                </select>\n              </div>\n              <div className=\"config-status\">\n                {apiConfig.apiKey ? (\n                  <span className=\"status-connected\">🟢 API Key Configured</span>\n                ) : (\n                  <span className=\"status-disconnected\">🔴 API Key Required</span>\n                )}\n              </div>\n            </div>\n            <div className=\"config-buttons\">\n              <button onClick={() => setShowConfig(false)} className=\"config-save-btn\">\n                Save & Close\n              </button>\n              <button onClick={() => setShowConfig(false)} className=\"config-cancel-btn\">\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"main-content\">\n        <div className=\"left-panel\">\n          <h2>NPCs ({npcs.length})</h2>\n          \n          <div className=\"stats-display\">\n            <div className=\"stat-group\">\n              <strong>Houses:</strong> {Object.entries(houseStats).map(([house, count]) => `${house}(${count})`).join(', ')}\n            </div>\n            <div className=\"stat-group\">\n              <strong>Gender:</strong> {Object.entries(genderStats).map(([gender, count]) => `${gender}(${count})`).join(', ')}\n            </div>\n            <div className=\"stat-group\">\n              <strong>Locations:</strong> {Object.entries(locationStats).map(([location, count]) => `${location}(${count})`).join(', ')}\n            </div>\n          </div>\n          \n          <div className=\"npc-list\">\n            {npcs.map(npc => formatNPCDisplay(npc))}\n          </div>\n        </div>\n\n        <div className=\"right-panel\">\n          <div className=\"world-events-section\">\n            <h3>World Events</h3>\n            \n            <div className=\"event-controls\">\n              <div className=\"timer-controls\">\n                <label>\n                  Auto Timer: \n                  <input \n                    type=\"number\" \n                    value={timerInterval} \n                    onChange={(e) => setTimerInterval(parseInt(e.target.value))}\n                    min=\"5\"\n                    max=\"300\"\n                  /> sec\n                </label>\n              </div>\n              \n              <div className=\"control-buttons\">\n                <button onClick={() => {\n                  if (currentEventIndex === 0) {\n                    processNextEvent();\n                  }\n                }} className=\"manual-start-btn\">\n                  🚀 Manual Start Event\n                </button>\n                \n                {!isAutoRunning ? (\n                  <button onClick={startAutoRun} className=\"start-btn\">\n                    ▶️ Auto Events\n                  </button>\n                ) : (\n                  <button onClick={stopAutoRun} className=\"stop-btn\">\n                    ⏸️ Pause Auto\n                  </button>\n                )}\n                \n                <button onClick={processNextEvent} className=\"next-btn\">\n                  ⏭️ Next Event\n                </button>\n              </div>\n              \n              <div className=\"custom-event\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Custom event...\"\n                  value={customEvent}\n                  onChange={(e) => setCustomEvent(e.target.value)}\n                  className=\"custom-event-input\"\n                />\n                <button onClick={sendCustomEvent} className=\"send-btn\">\n                  📤 Send\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"events-stack\">\n              {worldEvents.map((event, index) => {\n                let statusClass = 'event-pending';\n                if (index < currentEventIndex) {\n                  statusClass = 'event-completed';\n                } else if (index === currentEventIndex) {\n                  statusClass = 'event-running';\n                }\n                \n                return (\n                  <div key={event.event_id} className={`event-card-stack ${statusClass}`}>\n                    <div className=\"event-header\">\n                      <span className=\"event-number\">#{event.event_id}</span>\n                      <span className=\"event-status-indicator\">\n                        {index < currentEventIndex ? '✅' : index === currentEventIndex ? '🔄' : '⏳'}\n                      </span>\n                    </div>\n                    <div className=\"event-title\">{event.title}</div>\n                    <div className=\"event-description\">{event.description}</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}