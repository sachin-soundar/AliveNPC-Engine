{"ast":null,"code":"import React,{useEffect}from'react';import'./App.css';// Components\nimport{Header,NPCList,WorldEvents,ConfigModal,LoadingOverlay}from'./components';// Hooks\nimport{useNPCData,useWorldEvents,useAPIConfig,useRateLimit,useAutoRun}from'./hooks';// Services\nimport{aiService,npcService,dataService}from'./services';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// Custom hooks for state management\nconst{npcs,previousNpcs,flashAnimation,loadSampleData,loadPersonaData,loadDefaultData,updateNPCs}=useNPCData();const{worldEvents,currentEventIndex,customEvent,setCustomEvent,loadSampleEvents,loadWorldQuests,loadDefaultEvents,restartWorld,processNextEvent:baseProcessNextEvent,sendCustomEvent}=useWorldEvents();const{apiConfig,updateConfig,isConfigured}=useAPIConfig();const rateLimit=useRateLimit();const[showConfigModal,setShowConfigModal]=React.useState(false);const[isLoading,setIsLoading]=React.useState(false);const[loadingMessage,setLoadingMessage]=React.useState('');// Enhanced process next event with AI integration\nconst processNextEvent=async()=>{if(worldEvents.length===0)return;const event=worldEvents[currentEventIndex];setIsLoading(true);setLoadingMessage(`Processing: ${event.title}`);try{const updatedNpcs=await aiService.updateAllNPCsWithAI(npcs,event,apiConfig);updateNPCs(updatedNpcs);baseProcessNextEvent();}catch(error){console.error('Error processing event:',error);}finally{setIsLoading(false);setLoadingMessage('');}};// Enhanced custom event handler\nconst handleCustomEvent=async()=>{if(!customEvent.trim())return;const event={title:\"Custom Event\",description:customEvent,impact_level:\"Custom\"};setIsLoading(true);setLoadingMessage('Processing custom event...');try{const updatedNpcs=await aiService.updateAllNPCsWithAI(npcs,event,apiConfig);updateNPCs(updatedNpcs);sendCustomEvent(event);}catch(error){console.error('Error processing custom event:',error);}finally{setIsLoading(false);setLoadingMessage('');}};// Auto-run functionality\nconst autoRun=useAutoRun(processNextEvent);// Cleanup auto-run on unmount\nuseEffect(()=>{return()=>autoRun.cleanup();},[autoRun]);// Load environment variables on component mount\nuseEffect(()=>{const envApiKey=process.env.REACT_APP_CEREBRAS_API_KEY;const envApiUrl=process.env.REACT_APP_CEREBRAS_API_URL;const envModelName=process.env.REACT_APP_MODEL_NAME;if(envApiKey||envApiUrl||envModelName){setApiConfig({apiKey:envApiKey||'',apiUrl:envApiUrl||'https://api.cerebras.ai/v1/chat/completions',modelName:envModelName||'qwen-3-coder-480b'});}},[]);// Load default data on component mount\nuseEffect(()=>{loadDefaultData();},[loadDefaultData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{onLoadWorldQuests:loadWorldQuests,onLoadPersonas:loadPersonaData,onRestartWorld:restartWorld,onShowConfig:()=>setShowConfigModal(true)}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(NPCList,{npcs:npcs,previousNpcs:previousNpcs,flashAnimation:flashAnimation,rateLimit:rateLimit}),/*#__PURE__*/_jsx(WorldEvents,{worldEvents:worldEvents,currentEventIndex:currentEventIndex,customEvent:customEvent,setCustomEvent:setCustomEvent,onProcessNext:processNextEvent,onSendCustom:handleCustomEvent,autoRun:autoRun})]}),showConfigModal&&/*#__PURE__*/_jsx(ConfigModal,{apiConfig:apiConfig,onUpdateConfig:updateConfig,onClose:()=>setShowConfigModal(false),isConfigured:isConfigured()}),isLoading&&/*#__PURE__*/_jsx(LoadingOverlay,{message:loadingMessage})]});};export default App;","map":{"version":3,"names":["React","useEffect","Header","NPCList","WorldEvents","ConfigModal","LoadingOverlay","useNPCData","useWorldEvents","useAPIConfig","useRateLimit","useAutoRun","aiService","npcService","dataService","jsx","_jsx","jsxs","_jsxs","App","npcs","previousNpcs","flashAnimation","loadSampleData","loadPersonaData","loadDefaultData","updateNPCs","worldEvents","currentEventIndex","customEvent","setCustomEvent","loadSampleEvents","loadWorldQuests","loadDefaultEvents","restartWorld","processNextEvent","baseProcessNextEvent","sendCustomEvent","apiConfig","updateConfig","isConfigured","rateLimit","showConfigModal","setShowConfigModal","useState","isLoading","setIsLoading","loadingMessage","setLoadingMessage","length","event","title","updatedNpcs","updateAllNPCsWithAI","error","console","handleCustomEvent","trim","description","impact_level","autoRun","cleanup","envApiKey","process","env","REACT_APP_CEREBRAS_API_KEY","envApiUrl","REACT_APP_CEREBRAS_API_URL","envModelName","REACT_APP_MODEL_NAME","setApiConfig","apiKey","apiUrl","modelName","className","children","onLoadWorldQuests","onLoadPersonas","onRestartWorld","onShowConfig","onProcessNext","onSendCustom","onUpdateConfig","onClose","message"],"sources":["C:/Users/win10/Documents/GitHub/AliveNPC-Engine/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\n\n// Components\nimport { \n  Header, \n  NPCList, \n  WorldEvents, \n  ConfigModal, \n  LoadingOverlay \n} from './components';\n\n// Hooks\nimport { \n  useNPCData, \n  useWorldEvents, \n  useAPIConfig, \n  useRateLimit, \n  useAutoRun \n} from './hooks';\n\n// Services\nimport { aiService, npcService, dataService } from './services';\n\nconst App = () => {\n  // Custom hooks for state management\n  const { \n    npcs, \n    previousNpcs, \n    flashAnimation, \n    loadSampleData, \n    loadPersonaData, \n    loadDefaultData, \n    updateNPCs \n  } = useNPCData();\n  \n  const { \n    worldEvents, \n    currentEventIndex, \n    customEvent, \n    setCustomEvent,\n    loadSampleEvents, \n    loadWorldQuests, \n    loadDefaultEvents, \n    restartWorld, \n    processNextEvent: baseProcessNextEvent, \n    sendCustomEvent \n  } = useWorldEvents();\n  \n  const { apiConfig, updateConfig, isConfigured } = useAPIConfig();\n  const rateLimit = useRateLimit();\n  const [showConfigModal, setShowConfigModal] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [loadingMessage, setLoadingMessage] = React.useState('');\n\n  // Enhanced process next event with AI integration\n  const processNextEvent = async () => {\n    if (worldEvents.length === 0) return;\n    \n    const event = worldEvents[currentEventIndex];\n    setIsLoading(true);\n    setLoadingMessage(`Processing: ${event.title}`);\n    \n    try {\n      const updatedNpcs = await aiService.updateAllNPCsWithAI(npcs, event, apiConfig);\n      updateNPCs(updatedNpcs);\n      baseProcessNextEvent();\n    } catch (error) {\n      console.error('Error processing event:', error);\n    } finally {\n      setIsLoading(false);\n      setLoadingMessage('');\n    }\n  };\n  \n  // Enhanced custom event handler\n  const handleCustomEvent = async () => {\n    if (!customEvent.trim()) return;\n    \n    const event = {\n      title: \"Custom Event\",\n      description: customEvent,\n      impact_level: \"Custom\"\n    };\n    \n    setIsLoading(true);\n    setLoadingMessage('Processing custom event...');\n    \n    try {\n      const updatedNpcs = await aiService.updateAllNPCsWithAI(npcs, event, apiConfig);\n      updateNPCs(updatedNpcs);\n      sendCustomEvent(event);\n    } catch (error) {\n      console.error('Error processing custom event:', error);\n    } finally {\n      setIsLoading(false);\n      setLoadingMessage('');\n    }\n  };\n\n  // Auto-run functionality\n  const autoRun = useAutoRun(processNextEvent);\n  \n  // Cleanup auto-run on unmount\n  useEffect(() => {\n    return () => autoRun.cleanup();\n  }, [autoRun]);\n\n  // Load environment variables on component mount\n  useEffect(() => {\n    const envApiKey = process.env.REACT_APP_CEREBRAS_API_KEY;\n    const envApiUrl = process.env.REACT_APP_CEREBRAS_API_URL;\n    const envModelName = process.env.REACT_APP_MODEL_NAME;\n    \n    if (envApiKey || envApiUrl || envModelName) {\n      setApiConfig({\n        apiKey: envApiKey || '',\n        apiUrl: envApiUrl || 'https://api.cerebras.ai/v1/chat/completions',\n        modelName: envModelName || 'qwen-3-coder-480b'\n      });\n    }\n  }, []);\n\n  // Load default data on component mount\n  useEffect(() => {\n    loadDefaultData();\n  }, [loadDefaultData]);\n\n  return (\n    <div className=\"App\">\n      <Header \n        onLoadWorldQuests={loadWorldQuests}\n        onLoadPersonas={loadPersonaData}\n        onRestartWorld={restartWorld}\n        onShowConfig={() => setShowConfigModal(true)}\n      />\n      \n      <div className=\"main-content\">\n        <NPCList \n          npcs={npcs}\n          previousNpcs={previousNpcs}\n          flashAnimation={flashAnimation}\n          rateLimit={rateLimit}\n        />\n        \n        <WorldEvents \n          worldEvents={worldEvents}\n          currentEventIndex={currentEventIndex}\n          customEvent={customEvent}\n          setCustomEvent={setCustomEvent}\n          onProcessNext={processNextEvent}\n          onSendCustom={handleCustomEvent}\n          autoRun={autoRun}\n        />\n      </div>\n      \n      {showConfigModal && (\n        <ConfigModal \n          apiConfig={apiConfig}\n          onUpdateConfig={updateConfig}\n          onClose={() => setShowConfigModal(false)}\n          isConfigured={isConfigured()}\n        />\n      )}\n      \n      {isLoading && (\n        <LoadingOverlay message={loadingMessage} />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}