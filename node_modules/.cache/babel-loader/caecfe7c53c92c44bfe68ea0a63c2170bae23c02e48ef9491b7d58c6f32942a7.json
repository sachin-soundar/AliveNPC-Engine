{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useCallback } from 'react';\nconst useAutoRun = processNextEvent => {\n  _s();\n  const [isAutoRunning, setIsAutoRunning] = useState(false);\n  const [timerInterval, setTimerInterval] = useState(15);\n  const intervalRef = useRef(null);\n  const startAutoRun = useCallback(() => {\n    setIsAutoRunning(true);\n    intervalRef.current = setInterval(() => {\n      processNextEvent();\n    }, timerInterval * 1000);\n  }, [processNextEvent, timerInterval]);\n  const stopAutoRun = useCallback(() => {\n    setIsAutoRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n  const updateTimerInterval = useCallback(newInterval => {\n    setTimerInterval(newInterval);\n\n    // If auto-run is active, restart with new interval\n    if (isAutoRunning) {\n      stopAutoRun();\n      setTimeout(() => startAutoRun(), 100);\n    }\n  }, [isAutoRunning, startAutoRun, stopAutoRun]);\n\n  // Cleanup on unmount\n  const cleanup = useCallback(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n  }, []);\n  return {\n    isAutoRunning,\n    timerInterval,\n    startAutoRun,\n    stopAutoRun,\n    updateTimerInterval,\n    cleanup\n  };\n};\n_s(useAutoRun, \"855as+cWWGga3TVbtOf7Vll63Rw=\");\nexport default useAutoRun;","map":{"version":3,"names":["useState","useRef","useCallback","useAutoRun","processNextEvent","_s","isAutoRunning","setIsAutoRunning","timerInterval","setTimerInterval","intervalRef","startAutoRun","current","setInterval","stopAutoRun","clearInterval","updateTimerInterval","newInterval","setTimeout","cleanup"],"sources":["C:/Users/win10/Documents/GitHub/AliveNPC-Engine/src/hooks/useAutoRun.js"],"sourcesContent":["import { useState, useRef, useCallback } from 'react';\n\nconst useAutoRun = (processNextEvent) => {\n  const [isAutoRunning, setIsAutoRunning] = useState(false);\n  const [timerInterval, setTimerInterval] = useState(15);\n  const intervalRef = useRef(null);\n\n  const startAutoRun = useCallback(() => {\n    setIsAutoRunning(true);\n    intervalRef.current = setInterval(() => {\n      processNextEvent();\n    }, timerInterval * 1000);\n  }, [processNextEvent, timerInterval]);\n\n  const stopAutoRun = useCallback(() => {\n    setIsAutoRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  const updateTimerInterval = useCallback((newInterval) => {\n    setTimerInterval(newInterval);\n    \n    // If auto-run is active, restart with new interval\n    if (isAutoRunning) {\n      stopAutoRun();\n      setTimeout(() => startAutoRun(), 100);\n    }\n  }, [isAutoRunning, startAutoRun, stopAutoRun]);\n\n  // Cleanup on unmount\n  const cleanup = useCallback(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n  }, []);\n\n  return {\n    isAutoRunning,\n    timerInterval,\n    startAutoRun,\n    stopAutoRun,\n    updateTimerInterval,\n    cleanup\n  };\n};\n\nexport default useAutoRun;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAErD,MAAMC,UAAU,GAAIC,gBAAgB,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMU,WAAW,GAAGT,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMU,YAAY,GAAGT,WAAW,CAAC,MAAM;IACrCK,gBAAgB,CAAC,IAAI,CAAC;IACtBG,WAAW,CAACE,OAAO,GAAGC,WAAW,CAAC,MAAM;MACtCT,gBAAgB,CAAC,CAAC;IACpB,CAAC,EAAEI,aAAa,GAAG,IAAI,CAAC;EAC1B,CAAC,EAAE,CAACJ,gBAAgB,EAAEI,aAAa,CAAC,CAAC;EAErC,MAAMM,WAAW,GAAGZ,WAAW,CAAC,MAAM;IACpCK,gBAAgB,CAAC,KAAK,CAAC;IACvB,IAAIG,WAAW,CAACE,OAAO,EAAE;MACvBG,aAAa,CAACL,WAAW,CAACE,OAAO,CAAC;MAClCF,WAAW,CAACE,OAAO,GAAG,IAAI;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,mBAAmB,GAAGd,WAAW,CAAEe,WAAW,IAAK;IACvDR,gBAAgB,CAACQ,WAAW,CAAC;;IAE7B;IACA,IAAIX,aAAa,EAAE;MACjBQ,WAAW,CAAC,CAAC;MACbI,UAAU,CAAC,MAAMP,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC;IACvC;EACF,CAAC,EAAE,CAACL,aAAa,EAAEK,YAAY,EAAEG,WAAW,CAAC,CAAC;;EAE9C;EACA,MAAMK,OAAO,GAAGjB,WAAW,CAAC,MAAM;IAChC,IAAIQ,WAAW,CAACE,OAAO,EAAE;MACvBG,aAAa,CAACL,WAAW,CAACE,OAAO,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLN,aAAa;IACbE,aAAa;IACbG,YAAY;IACZG,WAAW;IACXE,mBAAmB;IACnBG;EACF,CAAC;AACH,CAAC;AAACd,EAAA,CA7CIF,UAAU;AA+ChB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}