{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nconst useNPCData = () => {\n  _s();\n  const [npcs, setNpcs] = useState([]);\n  const [previousNpcs, setPreviousNpcs] = useState([]);\n  const [flashAnimation, setFlashAnimation] = useState(false);\n  const loadSampleData = useCallback(() => {\n    const sampleNpcs = [{\n      id: \"stark_001\",\n      name: \"Ser Gareth of House Stark\",\n      house: \"Stark\",\n      age: 34,\n      gender: \"male\",\n      role: \"knight\",\n      traits: {\n        honor: 82,\n        loyalty: 88,\n        intelligence: 65,\n        emotional_intelligence: 70,\n        evil: 12,\n        selflessness: 75,\n        ambition: 35,\n        combat_skill: 80,\n        political_cunning: 45,\n        religious_devotion: 65\n      },\n      relationships: [{\n        npc_id: \"stark_002\",\n        relationship_type: \"family\",\n        strength: 90\n      }, {\n        npc_id: \"stark_015\",\n        relationship_type: \"ally\",\n        strength: 75\n      }],\n      current_behavior: \"Patrolling the borders with quiet determination\",\n      location: \"Winterfell\",\n      status: \"alive\"\n    }];\n    setNpcs(sampleNpcs);\n  }, []);\n  const loadPersona = useCallback(async () => {\n    try {\n      let npcResponse;\n      try {\n        npcResponse = await fetch('/dataset/npcs_30.json');\n      } catch {\n        try {\n          npcResponse = await fetch('/dataset/npcs_100.json');\n        } catch {\n          npcResponse = await fetch('/dataset/npcs_300.json');\n        }\n      }\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || npcData || []);\n      console.log('Persona data loaded successfully');\n    } catch (error) {\n      console.error('Error loading persona data:', error);\n      alert('Failed to load Persona data. Please check if NPC files exist.');\n    }\n  }, []);\n  const loadDefaultData = useCallback(async () => {\n    try {\n      const npcResponse = await fetch('/dataset/npcs_30.json');\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || []);\n    } catch (error) {\n      console.error('Error loading default data:', error);\n      loadSampleData();\n    }\n  }, [loadSampleData]);\n  const updateNPCs = useCallback(newNpcs => {\n    setPreviousNpcs([...npcs]);\n    setNpcs(newNpcs);\n    setFlashAnimation(true);\n    setTimeout(() => setFlashAnimation(false), 1000);\n  }, [npcs]);\n  return {\n    npcs,\n    previousNpcs,\n    flashAnimation,\n    loadPersona,\n    loadDefaultData,\n    updateNPCs\n  };\n};\n_s(useNPCData, \"CzmGXinYrg0PRujakAt1xnY5y2k=\");\nexport default useNPCData;","map":{"version":3,"names":["useState","useCallback","useNPCData","_s","npcs","setNpcs","previousNpcs","setPreviousNpcs","flashAnimation","setFlashAnimation","loadSampleData","sampleNpcs","id","name","house","age","gender","role","traits","honor","loyalty","intelligence","emotional_intelligence","evil","selflessness","ambition","combat_skill","political_cunning","religious_devotion","relationships","npc_id","relationship_type","strength","current_behavior","location","status","loadPersona","npcResponse","fetch","npcData","json","console","log","error","alert","loadDefaultData","updateNPCs","newNpcs","setTimeout"],"sources":["C:/Users/win10/Documents/GitHub/AliveNPC-Engine/src/hooks/useNPCData.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useNPCData = () => {\n  const [npcs, setNpcs] = useState([]);\n  const [previousNpcs, setPreviousNpcs] = useState([]);\n  const [flashAnimation, setFlashAnimation] = useState(false);\n\n  const loadSampleData = useCallback(() => {\n    const sampleNpcs = [\n      {\n        id: \"stark_001\",\n        name: \"Ser Gareth of House Stark\",\n        house: \"Stark\",\n        age: 34,\n        gender: \"male\",\n        role: \"knight\",\n        traits: {\n          honor: 82,\n          loyalty: 88,\n          intelligence: 65,\n          emotional_intelligence: 70,\n          evil: 12,\n          selflessness: 75,\n          ambition: 35,\n          combat_skill: 80,\n          political_cunning: 45,\n          religious_devotion: 65\n        },\n        relationships: [\n          { npc_id: \"stark_002\", relationship_type: \"family\", strength: 90 },\n          { npc_id: \"stark_015\", relationship_type: \"ally\", strength: 75 }\n        ],\n        current_behavior: \"Patrolling the borders with quiet determination\",\n        location: \"Winterfell\",\n        status: \"alive\"\n      }\n    ];\n    setNpcs(sampleNpcs);\n  }, []);\n\n  const loadPersona = useCallback(async () => {\n    try {\n      let npcResponse;\n      try {\n        npcResponse = await fetch('/dataset/npcs_30.json');\n      } catch {\n        try {\n          npcResponse = await fetch('/dataset/npcs_100.json');\n        } catch {\n          npcResponse = await fetch('/dataset/npcs_300.json');\n        }\n      }\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || npcData || []);\n      console.log('Persona data loaded successfully');\n    } catch (error) {\n      console.error('Error loading persona data:', error);\n      alert('Failed to load Persona data. Please check if NPC files exist.');\n    }\n  }, []);\n\n  const loadDefaultData = useCallback(async () => {\n    try {\n      const npcResponse = await fetch('/dataset/npcs_30.json');\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || []);\n    } catch (error) {\n      console.error('Error loading default data:', error);\n      loadSampleData();\n    }\n  }, [loadSampleData]);\n\n  const updateNPCs = useCallback((newNpcs) => {\n    setPreviousNpcs([...npcs]);\n    setNpcs(newNpcs);\n    setFlashAnimation(true);\n    setTimeout(() => setFlashAnimation(false), 1000);\n  }, [npcs]);\n\n  return {\n    npcs,\n    previousNpcs,\n    flashAnimation,\n    loadPersona,\n    loadDefaultData,\n    updateNPCs\n  };\n};\n\nexport default useNPCData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}