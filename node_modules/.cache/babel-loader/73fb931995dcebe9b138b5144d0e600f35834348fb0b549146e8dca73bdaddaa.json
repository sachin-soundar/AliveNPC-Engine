{"ast":null,"code":"class DataService{async loadNPCData(){let filename=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'npcs_30.json';try{const response=await fetch(`/${filename}`);if(!response.ok){throw new Error(`Failed to load ${filename}: ${response.statusText}`);}const data=await response.json();return data.npcs||data;}catch(error){console.error(`Error loading NPC data from ${filename}:`,error);return this.getSampleNPCs();}}async loadWorldEvents(){let filename=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'world_events.json';try{const response=await fetch(`/${filename}`);if(!response.ok){throw new Error(`Failed to load ${filename}: ${response.statusText}`);}const data=await response.json();return data.events||data;}catch(error){console.error(`Error loading world events from ${filename}:`,error);return this.getSampleEvents();}}async loadPersonaData(){const personaFiles=['npcs_persona_1.json','npcs_persona_2.json','npcs_persona_3.json','npcs_persona_4.json','npcs_persona_5.json'];try{// Try to load a random persona file\nconst randomFile=personaFiles[Math.floor(Math.random()*personaFiles.length)];const response=await fetch(`/${randomFile}`);if(!response.ok){throw new Error(`Failed to load ${randomFile}: ${response.statusText}`);}const data=await response.json();return data.npcs||data;}catch(error){console.error('Error loading persona data:',error);// Fallback to regular NPC data\nreturn this.loadNPCData();}}async loadWorldQuests(){try{const response=await fetch('/world_events.json');if(!response.ok){throw new Error(`Failed to load world_events.json: ${response.statusText}`);}const data=await response.json();return data.events||data;}catch(error){console.error('Error loading world quests:',error);return this.getSampleEvents();}}getSampleNPCs(){return[{\"id\":1,\"name\":\"Jon Snow\",\"house\":\"Stark\",\"title\":\"Lord Commander of the Night's Watch\",\"location\":\"Castle Black\",\"age\":24,\"gender\":\"Male\",\"status\":\"Alive\",\"traits\":{\"honor\":95,\"loyalty\":90,\"intelligence\":75,\"ambition\":60,\"cruelty\":10,\"courage\":90},\"relationships\":[{\"character\":\"Samwell Tarly\",\"relationship\":\"Best Friend\",\"strength\":95},{\"character\":\"Tyrion Lannister\",\"relationship\":\"Ally\",\"strength\":70},{\"character\":\"Daenerys Targaryen\",\"relationship\":\"Love Interest\",\"strength\":85}],\"current_action\":\"Defending the Wall against wildling threats while grappling with leadership responsibilities\"},{\"id\":2,\"name\":\"Tyrion Lannister\",\"house\":\"Lannister\",\"title\":\"Hand of the Queen\",\"location\":\"Dragonstone\",\"age\":39,\"gender\":\"Male\",\"status\":\"Alive\",\"traits\":{\"honor\":70,\"loyalty\":75,\"intelligence\":98,\"ambition\":80,\"cruelty\":25,\"courage\":70},\"relationships\":[{\"character\":\"Daenerys Targaryen\",\"relationship\":\"Queen\",\"strength\":80},{\"character\":\"Jon Snow\",\"relationship\":\"Ally\",\"strength\":70},{\"character\":\"Cersei Lannister\",\"relationship\":\"Sister/Enemy\",\"strength\":-80}],\"current_action\":\"Advising Daenerys on political strategy while managing the complexities of ruling\"},{\"id\":3,\"name\":\"Arya Stark\",\"house\":\"Stark\",\"title\":\"No One\",\"location\":\"Winterfell\",\"age\":18,\"gender\":\"Female\",\"status\":\"Alive\",\"traits\":{\"honor\":80,\"loyalty\":95,\"intelligence\":85,\"ambition\":70,\"cruelty\":60,\"courage\":95},\"relationships\":[{\"character\":\"Jon Snow\",\"relationship\":\"Half-Brother\",\"strength\":90},{\"character\":\"Sansa Stark\",\"relationship\":\"Sister\",\"strength\":75},{\"character\":\"The Hound\",\"relationship\":\"Complicated Ally\",\"strength\":60}],\"current_action\":\"Training in combat while reconnecting with family and planning revenge against enemies\"}];}getSampleEvents(){return[{\"id\":1,\"title\":\"The Red Wedding\",\"description\":\"Robb Stark, his mother Catelyn, and many Northern lords are brutally murdered at what was supposed to be a wedding celebration. The North's rebellion is crushed.\",\"impact_level\":\"Major\",\"affected_houses\":[\"Stark\",\"Frey\",\"Bolton\",\"Tully\"],\"political_shift\":\"Lannister victory, Northern rebellion crushed\"},{\"id\":2,\"title\":\"Joffrey's Death\",\"description\":\"King Joffrey Baratheon is poisoned at his own wedding feast. The realm is thrown into chaos as accusations fly.\",\"impact_level\":\"Major\",\"affected_houses\":[\"Baratheon\",\"Lannister\",\"Tyrell\"],\"political_shift\":\"Power vacuum in King's Landing, Tommen becomes king\"},{\"id\":3,\"title\":\"Dragons Return to Westeros\",\"description\":\"Daenerys Targaryen arrives in Westeros with her dragons and Dothraki army, beginning her conquest to reclaim the Iron Throne.\",\"impact_level\":\"Major\",\"affected_houses\":[\"Targaryen\",\"Lannister\",\"All Houses\"],\"political_shift\":\"New claimant to the throne, dragons return to Westeros\"}];}}export default new DataService();","map":{"version":3,"names":["DataService","loadNPCData","filename","arguments","length","undefined","response","fetch","ok","Error","statusText","data","json","npcs","error","console","getSampleNPCs","loadWorldEvents","events","getSampleEvents","loadPersonaData","personaFiles","randomFile","Math","floor","random","loadWorldQuests"],"sources":["C:/Users/win10/Documents/GitHub/AliveNPC-Engine/src/services/dataService.js"],"sourcesContent":["class DataService {\n  async loadNPCData(filename = 'npcs_30.json') {\n    try {\n      const response = await fetch(`/${filename}`);\n      if (!response.ok) {\n        throw new Error(`Failed to load ${filename}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      return data.npcs || data;\n    } catch (error) {\n      console.error(`Error loading NPC data from ${filename}:`, error);\n      return this.getSampleNPCs();\n    }\n  }\n\n  async loadWorldEvents(filename = 'world_events.json') {\n    try {\n      const response = await fetch(`/${filename}`);\n      if (!response.ok) {\n        throw new Error(`Failed to load ${filename}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      return data.events || data;\n    } catch (error) {\n      console.error(`Error loading world events from ${filename}:`, error);\n      return this.getSampleEvents();\n    }\n  }\n\n  async loadPersonaData() {\n    const personaFiles = [\n      'npcs_persona_1.json',\n      'npcs_persona_2.json', \n      'npcs_persona_3.json',\n      'npcs_persona_4.json',\n      'npcs_persona_5.json'\n    ];\n\n    try {\n      // Try to load a random persona file\n      const randomFile = personaFiles[Math.floor(Math.random() * personaFiles.length)];\n      const response = await fetch(`/${randomFile}`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to load ${randomFile}: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      return data.npcs || data;\n    } catch (error) {\n      console.error('Error loading persona data:', error);\n      // Fallback to regular NPC data\n      return this.loadNPCData();\n    }\n  }\n\n  async loadWorldQuests() {\n    try {\n      const response = await fetch('/world_events.json');\n      if (!response.ok) {\n        throw new Error(`Failed to load world_events.json: ${response.statusText}`);\n      }\n      const data = await response.json();\n      return data.events || data;\n    } catch (error) {\n      console.error('Error loading world quests:', error);\n      return this.getSampleEvents();\n    }\n  }\n\n  getSampleNPCs() {\n    return [\n      {\n        \"id\": 1,\n        \"name\": \"Jon Snow\",\n        \"house\": \"Stark\",\n        \"title\": \"Lord Commander of the Night's Watch\",\n        \"location\": \"Castle Black\",\n        \"age\": 24,\n        \"gender\": \"Male\",\n        \"status\": \"Alive\",\n        \"traits\": {\n          \"honor\": 95,\n          \"loyalty\": 90,\n          \"intelligence\": 75,\n          \"ambition\": 60,\n          \"cruelty\": 10,\n          \"courage\": 90\n        },\n        \"relationships\": [\n          { \"character\": \"Samwell Tarly\", \"relationship\": \"Best Friend\", \"strength\": 95 },\n          { \"character\": \"Tyrion Lannister\", \"relationship\": \"Ally\", \"strength\": 70 },\n          { \"character\": \"Daenerys Targaryen\", \"relationship\": \"Love Interest\", \"strength\": 85 }\n        ],\n        \"current_action\": \"Defending the Wall against wildling threats while grappling with leadership responsibilities\"\n      },\n      {\n        \"id\": 2,\n        \"name\": \"Tyrion Lannister\",\n        \"house\": \"Lannister\",\n        \"title\": \"Hand of the Queen\",\n        \"location\": \"Dragonstone\",\n        \"age\": 39,\n        \"gender\": \"Male\",\n        \"status\": \"Alive\",\n        \"traits\": {\n          \"honor\": 70,\n          \"loyalty\": 75,\n          \"intelligence\": 98,\n          \"ambition\": 80,\n          \"cruelty\": 25,\n          \"courage\": 70\n        },\n        \"relationships\": [\n          { \"character\": \"Daenerys Targaryen\", \"relationship\": \"Queen\", \"strength\": 80 },\n          { \"character\": \"Jon Snow\", \"relationship\": \"Ally\", \"strength\": 70 },\n          { \"character\": \"Cersei Lannister\", \"relationship\": \"Sister/Enemy\", \"strength\": -80 }\n        ],\n        \"current_action\": \"Advising Daenerys on political strategy while managing the complexities of ruling\"\n      },\n      {\n        \"id\": 3,\n        \"name\": \"Arya Stark\",\n        \"house\": \"Stark\",\n        \"title\": \"No One\",\n        \"location\": \"Winterfell\",\n        \"age\": 18,\n        \"gender\": \"Female\",\n        \"status\": \"Alive\",\n        \"traits\": {\n          \"honor\": 80,\n          \"loyalty\": 95,\n          \"intelligence\": 85,\n          \"ambition\": 70,\n          \"cruelty\": 60,\n          \"courage\": 95\n        },\n        \"relationships\": [\n          { \"character\": \"Jon Snow\", \"relationship\": \"Half-Brother\", \"strength\": 90 },\n          { \"character\": \"Sansa Stark\", \"relationship\": \"Sister\", \"strength\": 75 },\n          { \"character\": \"The Hound\", \"relationship\": \"Complicated Ally\", \"strength\": 60 }\n        ],\n        \"current_action\": \"Training in combat while reconnecting with family and planning revenge against enemies\"\n      }\n    ];\n  }\n\n  getSampleEvents() {\n    return [\n      {\n        \"id\": 1,\n        \"title\": \"The Red Wedding\",\n        \"description\": \"Robb Stark, his mother Catelyn, and many Northern lords are brutally murdered at what was supposed to be a wedding celebration. The North's rebellion is crushed.\",\n        \"impact_level\": \"Major\",\n        \"affected_houses\": [\"Stark\", \"Frey\", \"Bolton\", \"Tully\"],\n        \"political_shift\": \"Lannister victory, Northern rebellion crushed\"\n      },\n      {\n        \"id\": 2,\n        \"title\": \"Joffrey's Death\",\n        \"description\": \"King Joffrey Baratheon is poisoned at his own wedding feast. The realm is thrown into chaos as accusations fly.\",\n        \"impact_level\": \"Major\",\n        \"affected_houses\": [\"Baratheon\", \"Lannister\", \"Tyrell\"],\n        \"political_shift\": \"Power vacuum in King's Landing, Tommen becomes king\"\n      },\n      {\n        \"id\": 3,\n        \"title\": \"Dragons Return to Westeros\",\n        \"description\": \"Daenerys Targaryen arrives in Westeros with her dragons and Dothraki army, beginning her conquest to reclaim the Iron Throne.\",\n        \"impact_level\": \"Major\",\n        \"affected_houses\": [\"Targaryen\", \"Lannister\", \"All Houses\"],\n        \"political_shift\": \"New claimant to the throne, dragons return to Westeros\"\n      }\n    ];\n  }\n}\n\nexport default new DataService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}