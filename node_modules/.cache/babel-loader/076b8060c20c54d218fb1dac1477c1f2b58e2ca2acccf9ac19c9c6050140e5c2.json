{"ast":null,"code":"import{useState,useCallback}from'react';const useWorldEvents=()=>{const[worldEvents,setWorldEvents]=useState([]);const[currentEventIndex,setCurrentEventIndex]=useState(0);const[customEvent,setCustomEvent]=useState('');const loadSampleEvents=useCallback(()=>{const sampleEvents=[{event_id:1,title:\"Lord Jon Arryn of House Arryn dies mysteriously\",description:\"The Hand of the King dies suddenly, creating a power vacuum in King's Landing\",political_context:{house_stark:\"Ned Stark of House Stark reluctantly accepts Hand position, honor compels duty to realm\"},cascading_effects:[\"Power vacuum in King's Landing\",\"Stark family travels south\"]}];setWorldEvents(sampleEvents);},[]);const loadWorldQuest=useCallback(async()=>{try{const eventsResponse=await fetch('/world_events.json');const eventsData=await eventsResponse.json();setWorldEvents(eventsData.world_events||[]);setCurrentEventIndex(0);console.log('World Quest loaded successfully');}catch(error){console.error('Error loading world events:',error);alert('Failed to load World Quest. Please check if world_events.json exists.');}},[]);const loadDefaultEvents=useCallback(async()=>{try{const eventsResponse=await fetch('/world_events.json');const eventsData=await eventsResponse.json();setWorldEvents(eventsData.world_events||[]);}catch(error){console.error('Error loading default events:',error);loadSampleEvents();}},[loadSampleEvents]);const restartWorld=useCallback(()=>{setCurrentEventIndex(0);console.log('World restarted - reset to first event');},[]);const nextEvent=useCallback(()=>{setCurrentEventIndex(prev=>prev+1);},[]);const createCustomEvent=useCallback(eventTitle=>{return{event_id:999,title:eventTitle,description:\"Custom event triggered by user\",political_context:{},cascading_effects:[]};},[]);return{worldEvents,currentEventIndex,customEvent,setCustomEvent,loadWorldQuest,loadDefaultEvents,restartWorld,nextEvent,createCustomEvent};};export default useWorldEvents;","map":{"version":3,"names":["useState","useCallback","useWorldEvents","worldEvents","setWorldEvents","currentEventIndex","setCurrentEventIndex","customEvent","setCustomEvent","loadSampleEvents","sampleEvents","event_id","title","description","political_context","house_stark","cascading_effects","loadWorldQuest","eventsResponse","fetch","eventsData","json","world_events","console","log","error","alert","loadDefaultEvents","restartWorld","nextEvent","prev","createCustomEvent","eventTitle"],"sources":["C:/Users/win10/Documents/GitHub/AliveNPC-Engine/src/hooks/useWorldEvents.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useWorldEvents = () => {\n  const [worldEvents, setWorldEvents] = useState([]);\n  const [currentEventIndex, setCurrentEventIndex] = useState(0);\n  const [customEvent, setCustomEvent] = useState('');\n\n  const loadSampleEvents = useCallback(() => {\n    const sampleEvents = [\n      {\n        event_id: 1,\n        title: \"Lord Jon Arryn of House Arryn dies mysteriously\",\n        description: \"The Hand of the King dies suddenly, creating a power vacuum in King's Landing\",\n        political_context: {\n          house_stark: \"Ned Stark of House Stark reluctantly accepts Hand position, honor compels duty to realm\"\n        },\n        cascading_effects: [\"Power vacuum in King's Landing\", \"Stark family travels south\"]\n      }\n    ];\n    setWorldEvents(sampleEvents);\n  }, []);\n\n  const loadWorldQuest = useCallback(async () => {\n    try {\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n      setCurrentEventIndex(0);\n      console.log('World Quest loaded successfully');\n    } catch (error) {\n      console.error('Error loading world events:', error);\n      alert('Failed to load World Quest. Please check if world_events.json exists.');\n    }\n  }, []);\n\n  const loadDefaultEvents = useCallback(async () => {\n    try {\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n    } catch (error) {\n      console.error('Error loading default events:', error);\n      loadSampleEvents();\n    }\n  }, [loadSampleEvents]);\n\n  const restartWorld = useCallback(() => {\n    setCurrentEventIndex(0);\n    console.log('World restarted - reset to first event');\n  }, []);\n\n  const nextEvent = useCallback(() => {\n    setCurrentEventIndex(prev => prev + 1);\n  }, []);\n\n  const createCustomEvent = useCallback((eventTitle) => {\n    return {\n      event_id: 999,\n      title: eventTitle,\n      description: \"Custom event triggered by user\",\n      political_context: {},\n      cascading_effects: []\n    };\n  }, []);\n\n  return {\n    worldEvents,\n    currentEventIndex,\n    customEvent,\n    setCustomEvent,\n    loadWorldQuest,\n    loadDefaultEvents,\n    restartWorld,\n    nextEvent,\n    createCustomEvent\n  };\n};\n\nexport default useWorldEvents;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}