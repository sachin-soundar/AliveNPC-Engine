{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Documents\\\\GitHub\\\\LiveNPC Engine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [npcs, setNpcs] = useState([]);\n  const [worldEvents, setWorldEvents] = useState([]);\n  const [currentEventIndex, setCurrentEventIndex] = useState(0);\n  const [isAutoRunning, setIsAutoRunning] = useState(false);\n  const [timerInterval, setTimerInterval] = useState(15);\n  const [customEvent, setCustomEvent] = useState('');\n  const intervalRef = useRef(null);\n\n  // Load default data on component mount\n  useEffect(() => {\n    loadDefaultData();\n  }, []);\n  const loadDefaultData = async () => {\n    try {\n      // Load NPCs\n      const npcResponse = await fetch('/dataset/npcs_100.json');\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || []);\n\n      // Load World Events\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n    } catch (error) {\n      console.error('Error loading default data:', error);\n      // Fallback to sample data if files not found\n      loadSampleData();\n    }\n  };\n  const loadSampleData = () => {\n    // Sample NPCs based on the schema\n    const sampleNpcs = [{\n      id: \"stark_001\",\n      name: \"Ser Gareth of House Stark\",\n      house: \"Stark\",\n      age: 34,\n      gender: \"male\",\n      role: \"knight\",\n      traits: {\n        honor: 82,\n        loyalty: 88,\n        intelligence: 65,\n        emotional_intelligence: 70,\n        evil: 12,\n        selflessness: 75,\n        ambition: 35,\n        combat_skill: 80,\n        political_cunning: 45,\n        religious_devotion: 65\n      },\n      relationships: [{\n        npc_id: \"stark_002\",\n        relationship_type: \"family\",\n        strength: 90\n      }, {\n        npc_id: \"stark_015\",\n        relationship_type: \"ally\",\n        strength: 75\n      }],\n      current_behavior: \"Patrolling the borders with quiet determination\",\n      location: \"Winterfell\",\n      status: \"alive\"\n    }];\n    const sampleEvents = [{\n      event_id: 1,\n      title: \"Lord Jon Arryn of House Arryn dies mysteriously\",\n      description: \"The Hand of the King dies suddenly, creating a power vacuum in King's Landing\",\n      political_context: {\n        house_stark: \"Ned Stark of House Stark reluctantly accepts Hand position, honor compels duty to realm\"\n      },\n      cascading_effects: [\"Power vacuum in King's Landing\", \"Stark family travels south\"]\n    }];\n    setNpcs(sampleNpcs);\n    setWorldEvents(sampleEvents);\n  };\n  const updateNPCWithAI = async (npc, event) => {\n    const apiKey = process.env.REACT_APP_CEREBRAS_API_KEY;\n    const apiUrl = process.env.REACT_APP_CEREBRAS_API_URL;\n    const modelName = process.env.REACT_APP_MODEL_NAME;\n    if (!apiKey || apiKey === 'your_cerebras_api_key_here') {\n      console.warn('Cerebras API key not configured. Using fallback simulation.');\n      return simulateNPCUpdate(npc, event);\n    }\n    const prompt = `You are an expert AI agent simulating NPC evolution in a Game of Thrones universe. Update the NPC based on the world event, ensuring changes align with Westerosi lore, politics, and character archetypes. Use the empirical formula: NPC Persona (with current behavior) × World Event = New Behavior + Change in Persona.\n\nNPC Data (JSON schema-compliant):\n${JSON.stringify(npc, null, 2)}\n\nWorld Event:\n${event.title} - ${event.description}\n\nReason step by step:\n1. Assess impact: How does the event affect this NPC's house, role, location, status, traits, and relationships? Factor in traits (e.g., high evil amplifies malice, low loyalty risks defection).\n2. New Behavior: Craft a concise natural language description of updated mood/actions, grounded in lore.\n3. Persona Changes: Adjust traits by -20 to +20 max (subtle shifts); modify relationship strengths by -30 to +30 or add/remove if logical; update location/status only if directly implied.\n4. Consistency: Avoid drastic overhauls—events ripple, not revolutionize. Preserve JSON schema integrity.\n\nOutput ONLY the updated NPC JSON. No extra text.`;\n    try {\n      const response = await axios.post(apiUrl, {\n        model: modelName,\n        messages: [{\n          role: \"system\",\n          content: \"You are an expert Game of Thrones NPC simulation engine. Always respond with valid JSON only.\"\n        }, {\n          role: \"user\",\n          content: prompt\n        }],\n        temperature: 0.7,\n        max_tokens: 2000,\n        stream: false\n      }, {\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const aiResponse = response.data.choices[0].message.content;\n\n      // Parse the AI response as JSON\n      try {\n        const updatedNpc = JSON.parse(aiResponse);\n        // Validate that essential fields are preserved\n        if (updatedNpc.id && updatedNpc.name && updatedNpc.house) {\n          return updatedNpc;\n        } else {\n          throw new Error('Invalid NPC structure returned by AI');\n        }\n      } catch (parseError) {\n        console.error('Failed to parse AI response as JSON:', parseError);\n        console.log('AI Response:', aiResponse);\n        return simulateNPCUpdate(npc, event);\n      }\n    } catch (error) {\n      console.error('Error calling Cerebras API:', error);\n      return simulateNPCUpdate(npc, event);\n    }\n  };\n  const simulateNPCUpdate = (npc, event) => {\n    // Fallback simulation when AI is not available\n    const updatedNpc = {\n      ...npc\n    };\n\n    // Simulate trait changes based on event\n    if (event.title.includes('dies') || event.title.includes('executed')) {\n      updatedNpc.traits.honor = Math.max(0, Math.min(100, updatedNpc.traits.honor + (Math.random() * 20 - 10)));\n      updatedNpc.traits.loyalty = Math.max(0, Math.min(100, updatedNpc.traits.loyalty + (Math.random() * 15 - 5)));\n      updatedNpc.current_behavior = `Reacting to recent tragic events with ${updatedNpc.traits.honor > 70 ? 'righteous anger' : 'calculated caution'}`;\n    } else if (event.title.includes('war') || event.title.includes('battle')) {\n      updatedNpc.traits.ambition = Math.max(0, Math.min(100, updatedNpc.traits.ambition + (Math.random() * 15 - 5)));\n      updatedNpc.current_behavior = `Preparing for the conflicts ahead with ${updatedNpc.traits.ambition > 70 ? 'eager anticipation' : 'cautious planning'}`;\n    } else {\n      updatedNpc.traits.intelligence = Math.max(0, Math.min(100, updatedNpc.traits.intelligence + (Math.random() * 10 - 5)));\n      updatedNpc.current_behavior = `Adapting to changing circumstances with ${updatedNpc.traits.intelligence > 70 ? 'strategic thinking' : 'careful observation'}`;\n    }\n    return updatedNpc;\n  };\n  const processNextEvent = async () => {\n    if (currentEventIndex >= worldEvents.length) {\n      setIsAutoRunning(false);\n      return;\n    }\n    const currentEvent = worldEvents[currentEventIndex];\n    const updatedNpcs = [];\n    for (const npc of npcs) {\n      const updatedNpc = await updateNPCWithAI(npc, currentEvent);\n      updatedNpcs.push(updatedNpc);\n    }\n    setNpcs(updatedNpcs);\n    setCurrentEventIndex(prev => prev + 1);\n  };\n  const startAutoRun = () => {\n    setIsAutoRunning(true);\n    intervalRef.current = setInterval(() => {\n      processNextEvent();\n    }, timerInterval * 1000);\n  };\n  const stopAutoRun = () => {\n    setIsAutoRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n  };\n  const sendCustomEvent = async () => {\n    if (!customEvent.trim()) return;\n    const event = {\n      event_id: 999,\n      title: customEvent,\n      description: \"Custom event triggered by user\",\n      political_context: {},\n      cascading_effects: []\n    };\n    const updatedNpcs = [];\n    for (const npc of npcs) {\n      const updatedNpc = await updateNPCWithAI(npc, event);\n      updatedNpcs.push(updatedNpc);\n    }\n    setNpcs(updatedNpcs);\n    setCustomEvent('');\n  };\n  const formatNPCDisplay = npc => {\n    const traits = npc.traits;\n    const relationships = npc.relationships || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"npc-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"npc-id\",\n          children: [\"id: \", npc.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"npc-name\",\n          children: [\"name: \", npc.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-basic-info\",\n        children: [\"\\uD83C\\uDFE0 \", npc.house, \" \\uD83D\\uDD1E\", npc.age, \" \", npc.gender === 'male' ? '👨' : '👩', npc.gender.charAt(0).toUpperCase(), \" \\uD83D\\uDCBC \", npc.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-traits\",\n        children: [\"Honor: \", traits.honor, \" Loyalty: \", traits.loyalty, \" IQ: \", traits.intelligence, \" EQ: \", traits.emotional_intelligence, \" Evil: \", traits.evil, \" Selfless: \", traits.selflessness, \" Ambition: \", traits.ambition, \" Combat: \", traits.combat_skill, \" Political: \", traits.political_cunning, \" Religion: \", traits.religious_devotion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-relationships\",\n        children: relationships.map((rel, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC66 \", rel.npc_id, \" \", rel.relationship_type, \" Str\", rel.strength]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-location\",\n        children: [\"\\uD83C\\uDF0D \", npc.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-status\",\n        children: [\"\\uD83D\\uDFE2 \", npc.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"npc-behavior\",\n        children: [\"Current_Behavior: \", npc.current_behavior]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, npc.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NPC Simulation Arena\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadDefaultData,\n          className: \"load-btn\",\n          children: \"Load World Quest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadDefaultData,\n          className: \"load-btn\",\n          children: \"Load Persona\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"NPCs (\", npcs.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"npc-list\",\n          children: npcs.map(npc => formatNPCDisplay(npc))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"world-events-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"World Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-event\",\n            children: worldEvents[currentEventIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Event #\", worldEvents[currentEventIndex].event_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: worldEvents[currentEventIndex].title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: worldEvents[currentEventIndex].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-controls\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Auto Event Timer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: timerInterval,\n                  onChange: e => setTimerInterval(parseInt(e.target.value)),\n                  min: \"5\",\n                  max: \"300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this), \" seconds\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control-buttons\",\n              children: [!isAutoRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: startAutoRun,\n                className: \"start-btn\",\n                children: \"\\u25B6\\uFE0F Start Auto Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: stopAutoRun,\n                className: \"stop-btn\",\n                children: \"\\u23F8\\uFE0F Pause Auto Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: processNextEvent,\n                className: \"next-btn\",\n                children: \"\\u23ED\\uFE0F Force Next Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-event\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Send custom event...\",\n                value: customEvent,\n                onChange: e => setCustomEvent(e.target.value),\n                className: \"custom-event-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: sendCustomEvent,\n                className: \"send-btn\",\n                children: \"\\uD83D\\uDCE4 Send Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"n6XSWPfJIJWcd6QkWW2ZMt1+gU8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","npcs","setNpcs","worldEvents","setWorldEvents","currentEventIndex","setCurrentEventIndex","isAutoRunning","setIsAutoRunning","timerInterval","setTimerInterval","customEvent","setCustomEvent","intervalRef","loadDefaultData","npcResponse","fetch","npcData","json","eventsResponse","eventsData","world_events","error","console","loadSampleData","sampleNpcs","id","name","house","age","gender","role","traits","honor","loyalty","intelligence","emotional_intelligence","evil","selflessness","ambition","combat_skill","political_cunning","religious_devotion","relationships","npc_id","relationship_type","strength","current_behavior","location","status","sampleEvents","event_id","title","description","political_context","house_stark","cascading_effects","updateNPCWithAI","npc","event","apiKey","process","env","REACT_APP_CEREBRAS_API_KEY","apiUrl","REACT_APP_CEREBRAS_API_URL","modelName","REACT_APP_MODEL_NAME","warn","simulateNPCUpdate","prompt","JSON","stringify","response","post","model","messages","content","temperature","max_tokens","stream","headers","aiResponse","data","choices","message","updatedNpc","parse","Error","parseError","log","includes","Math","max","min","random","processNextEvent","length","currentEvent","updatedNpcs","push","prev","startAutoRun","current","setInterval","stopAutoRun","clearInterval","sendCustomEvent","trim","formatNPCDisplay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","map","rel","idx","onClick","type","value","onChange","e","parseInt","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/win10/Documents/GitHub/LiveNPC Engine/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [npcs, setNpcs] = useState([]);\n  const [worldEvents, setWorldEvents] = useState([]);\n  const [currentEventIndex, setCurrentEventIndex] = useState(0);\n  const [isAutoRunning, setIsAutoRunning] = useState(false);\n  const [timerInterval, setTimerInterval] = useState(15);\n  const [customEvent, setCustomEvent] = useState('');\n  const intervalRef = useRef(null);\n\n  // Load default data on component mount\n  useEffect(() => {\n    loadDefaultData();\n  }, []);\n\n  const loadDefaultData = async () => {\n    try {\n      // Load NPCs\n      const npcResponse = await fetch('/dataset/npcs_100.json');\n      const npcData = await npcResponse.json();\n      setNpcs(npcData.npcs || []);\n\n      // Load World Events\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n    } catch (error) {\n      console.error('Error loading default data:', error);\n      // Fallback to sample data if files not found\n      loadSampleData();\n    }\n  };\n\n  const loadSampleData = () => {\n    // Sample NPCs based on the schema\n    const sampleNpcs = [\n      {\n        id: \"stark_001\",\n        name: \"Ser Gareth of House Stark\",\n        house: \"Stark\",\n        age: 34,\n        gender: \"male\",\n        role: \"knight\",\n        traits: {\n          honor: 82,\n          loyalty: 88,\n          intelligence: 65,\n          emotional_intelligence: 70,\n          evil: 12,\n          selflessness: 75,\n          ambition: 35,\n          combat_skill: 80,\n          political_cunning: 45,\n          religious_devotion: 65\n        },\n        relationships: [\n          { npc_id: \"stark_002\", relationship_type: \"family\", strength: 90 },\n          { npc_id: \"stark_015\", relationship_type: \"ally\", strength: 75 }\n        ],\n        current_behavior: \"Patrolling the borders with quiet determination\",\n        location: \"Winterfell\",\n        status: \"alive\"\n      }\n    ];\n\n    const sampleEvents = [\n      {\n        event_id: 1,\n        title: \"Lord Jon Arryn of House Arryn dies mysteriously\",\n        description: \"The Hand of the King dies suddenly, creating a power vacuum in King's Landing\",\n        political_context: {\n          house_stark: \"Ned Stark of House Stark reluctantly accepts Hand position, honor compels duty to realm\"\n        },\n        cascading_effects: [\"Power vacuum in King's Landing\", \"Stark family travels south\"]\n      }\n    ];\n\n    setNpcs(sampleNpcs);\n    setWorldEvents(sampleEvents);\n  };\n\n  const updateNPCWithAI = async (npc, event) => {\n    const apiKey = process.env.REACT_APP_CEREBRAS_API_KEY;\n    const apiUrl = process.env.REACT_APP_CEREBRAS_API_URL;\n    const modelName = process.env.REACT_APP_MODEL_NAME;\n\n    if (!apiKey || apiKey === 'your_cerebras_api_key_here') {\n      console.warn('Cerebras API key not configured. Using fallback simulation.');\n      return simulateNPCUpdate(npc, event);\n    }\n\n    const prompt = `You are an expert AI agent simulating NPC evolution in a Game of Thrones universe. Update the NPC based on the world event, ensuring changes align with Westerosi lore, politics, and character archetypes. Use the empirical formula: NPC Persona (with current behavior) × World Event = New Behavior + Change in Persona.\n\nNPC Data (JSON schema-compliant):\n${JSON.stringify(npc, null, 2)}\n\nWorld Event:\n${event.title} - ${event.description}\n\nReason step by step:\n1. Assess impact: How does the event affect this NPC's house, role, location, status, traits, and relationships? Factor in traits (e.g., high evil amplifies malice, low loyalty risks defection).\n2. New Behavior: Craft a concise natural language description of updated mood/actions, grounded in lore.\n3. Persona Changes: Adjust traits by -20 to +20 max (subtle shifts); modify relationship strengths by -30 to +30 or add/remove if logical; update location/status only if directly implied.\n4. Consistency: Avoid drastic overhauls—events ripple, not revolutionize. Preserve JSON schema integrity.\n\nOutput ONLY the updated NPC JSON. No extra text.`;\n\n    try {\n      const response = await axios.post(apiUrl, {\n        model: modelName,\n        messages: [\n          {\n            role: \"system\",\n            content: \"You are an expert Game of Thrones NPC simulation engine. Always respond with valid JSON only.\"\n          },\n          {\n            role: \"user\",\n            content: prompt\n          }\n        ],\n        temperature: 0.7,\n        max_tokens: 2000,\n        stream: false\n      }, {\n        headers: {\n          'Authorization': `Bearer ${apiKey}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const aiResponse = response.data.choices[0].message.content;\n      \n      // Parse the AI response as JSON\n      try {\n        const updatedNpc = JSON.parse(aiResponse);\n        // Validate that essential fields are preserved\n        if (updatedNpc.id && updatedNpc.name && updatedNpc.house) {\n          return updatedNpc;\n        } else {\n          throw new Error('Invalid NPC structure returned by AI');\n        }\n      } catch (parseError) {\n        console.error('Failed to parse AI response as JSON:', parseError);\n        console.log('AI Response:', aiResponse);\n        return simulateNPCUpdate(npc, event);\n      }\n    } catch (error) {\n      console.error('Error calling Cerebras API:', error);\n      return simulateNPCUpdate(npc, event);\n    }\n  };\n\n  const simulateNPCUpdate = (npc, event) => {\n    // Fallback simulation when AI is not available\n    const updatedNpc = { ...npc };\n    \n    // Simulate trait changes based on event\n    if (event.title.includes('dies') || event.title.includes('executed')) {\n      updatedNpc.traits.honor = Math.max(0, Math.min(100, updatedNpc.traits.honor + (Math.random() * 20 - 10)));\n      updatedNpc.traits.loyalty = Math.max(0, Math.min(100, updatedNpc.traits.loyalty + (Math.random() * 15 - 5)));\n      updatedNpc.current_behavior = `Reacting to recent tragic events with ${updatedNpc.traits.honor > 70 ? 'righteous anger' : 'calculated caution'}`;\n    } else if (event.title.includes('war') || event.title.includes('battle')) {\n      updatedNpc.traits.ambition = Math.max(0, Math.min(100, updatedNpc.traits.ambition + (Math.random() * 15 - 5)));\n      updatedNpc.current_behavior = `Preparing for the conflicts ahead with ${updatedNpc.traits.ambition > 70 ? 'eager anticipation' : 'cautious planning'}`;\n    } else {\n      updatedNpc.traits.intelligence = Math.max(0, Math.min(100, updatedNpc.traits.intelligence + (Math.random() * 10 - 5)));\n      updatedNpc.current_behavior = `Adapting to changing circumstances with ${updatedNpc.traits.intelligence > 70 ? 'strategic thinking' : 'careful observation'}`;\n    }\n\n    return updatedNpc;\n  };\n\n  const processNextEvent = async () => {\n    if (currentEventIndex >= worldEvents.length) {\n      setIsAutoRunning(false);\n      return;\n    }\n\n    const currentEvent = worldEvents[currentEventIndex];\n    const updatedNpcs = [];\n\n    for (const npc of npcs) {\n      const updatedNpc = await updateNPCWithAI(npc, currentEvent);\n      updatedNpcs.push(updatedNpc);\n    }\n\n    setNpcs(updatedNpcs);\n    setCurrentEventIndex(prev => prev + 1);\n  };\n\n  const startAutoRun = () => {\n    setIsAutoRunning(true);\n    intervalRef.current = setInterval(() => {\n      processNextEvent();\n    }, timerInterval * 1000);\n  };\n\n  const stopAutoRun = () => {\n    setIsAutoRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n  };\n\n  const sendCustomEvent = async () => {\n    if (!customEvent.trim()) return;\n\n    const event = {\n      event_id: 999,\n      title: customEvent,\n      description: \"Custom event triggered by user\",\n      political_context: {},\n      cascading_effects: []\n    };\n\n    const updatedNpcs = [];\n    for (const npc of npcs) {\n      const updatedNpc = await updateNPCWithAI(npc, event);\n      updatedNpcs.push(updatedNpc);\n    }\n\n    setNpcs(updatedNpcs);\n    setCustomEvent('');\n  };\n\n  const formatNPCDisplay = (npc) => {\n    const traits = npc.traits;\n    const relationships = npc.relationships || [];\n    \n    return (\n      <div key={npc.id} className=\"npc-card\">\n        <div className=\"npc-header\">\n          <span className=\"npc-id\">id: {npc.id}</span>\n          <span className=\"npc-name\">name: {npc.name}</span>\n        </div>\n        <div className=\"npc-basic-info\">\n          🏠 {npc.house} 🔞{npc.age} {npc.gender === 'male' ? '👨' : '👩'}{npc.gender.charAt(0).toUpperCase()} 💼 {npc.role}\n        </div>\n        <div className=\"npc-traits\">\n          Honor: {traits.honor} Loyalty: {traits.loyalty} IQ: {traits.intelligence} EQ: {traits.emotional_intelligence} Evil: {traits.evil} Selfless: {traits.selflessness} Ambition: {traits.ambition} Combat: {traits.combat_skill} Political: {traits.political_cunning} Religion: {traits.religious_devotion}\n        </div>\n        <div className=\"npc-relationships\">\n          {relationships.map((rel, idx) => (\n            <div key={idx}>\n              👨‍👦 {rel.npc_id} {rel.relationship_type} Str{rel.strength}\n            </div>\n          ))}\n        </div>\n        <div className=\"npc-location\">🌍 {npc.location}</div>\n        <div className=\"npc-status\">🟢 {npc.status}</div>\n        <div className=\"npc-behavior\">\n          Current_Behavior: {npc.current_behavior}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>NPC Simulation Arena</h1>\n        <div className=\"header-buttons\">\n          <button onClick={loadDefaultData} className=\"load-btn\">\n            Load World Quest\n          </button>\n          <button onClick={loadDefaultData} className=\"load-btn\">\n            Load Persona\n          </button>\n        </div>\n      </header>\n\n      <div className=\"main-content\">\n        <div className=\"left-panel\">\n          <h2>NPCs ({npcs.length})</h2>\n          <div className=\"npc-list\">\n            {npcs.map(npc => formatNPCDisplay(npc))}\n          </div>\n        </div>\n\n        <div className=\"right-panel\">\n          <div className=\"world-events-section\">\n            <h3>World Events</h3>\n            <div className=\"current-event\">\n              {worldEvents[currentEventIndex] && (\n                <div className=\"event-card\">\n                  <h4>Event #{worldEvents[currentEventIndex].event_id}</h4>\n                  <p><strong>{worldEvents[currentEventIndex].title}</strong></p>\n                  <p>{worldEvents[currentEventIndex].description}</p>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"event-controls\">\n              <div className=\"timer-controls\">\n                <label>\n                  Auto Event Timer: \n                  <input \n                    type=\"number\" \n                    value={timerInterval} \n                    onChange={(e) => setTimerInterval(parseInt(e.target.value))}\n                    min=\"5\"\n                    max=\"300\"\n                  /> seconds\n                </label>\n              </div>\n              \n              <div className=\"control-buttons\">\n                {!isAutoRunning ? (\n                  <button onClick={startAutoRun} className=\"start-btn\">\n                    ▶️ Start Auto Events\n                  </button>\n                ) : (\n                  <button onClick={stopAutoRun} className=\"stop-btn\">\n                    ⏸️ Pause Auto Events\n                  </button>\n                )}\n                \n                <button onClick={processNextEvent} className=\"next-btn\">\n                  ⏭️ Force Next Event\n                </button>\n              </div>\n              \n              <div className=\"custom-event\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Send custom event...\"\n                  value={customEvent}\n                  onChange={(e) => setCustomEvent(e.target.value)}\n                  className=\"custom-event-input\"\n                />\n                <button onClick={sendCustomEvent} className=\"send-btn\">\n                  📤 Send Event\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}