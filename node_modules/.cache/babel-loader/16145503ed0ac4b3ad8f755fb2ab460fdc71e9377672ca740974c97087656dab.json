{"ast":null,"code":"class NPCService{formatNPCDisplay(npc,previousNpcs){const previousNpc=previousNpcs===null||previousNpcs===void 0?void 0:previousNpcs.find(p=>p.id===npc.id);return{...npc,displayData:{hasChanges:this.hasSignificantChanges(npc,previousNpc),traitChanges:this.getTraitChanges(npc,previousNpc),relationshipChanges:this.getRelationshipChanges(npc,previousNpc)}};}hasSignificantChanges(current,previous){var _current$relationship,_previous$relationshi;if(!previous)return false;// Check trait changes\nconst traitThreshold=5;for(const trait in current.traits){if(Math.abs(current.traits[trait]-previous.traits[trait])>=traitThreshold){return true;}}// Check relationship changes\nif(((_current$relationship=current.relationships)===null||_current$relationship===void 0?void 0:_current$relationship.length)!==((_previous$relationshi=previous.relationships)===null||_previous$relationshi===void 0?void 0:_previous$relationshi.length)){return true;}// Check for relationship strength changes\nfor(const rel of current.relationships||[]){var _previous$relationshi2;const prevRel=(_previous$relationshi2=previous.relationships)===null||_previous$relationshi2===void 0?void 0:_previous$relationshi2.find(r=>r.character===rel.character);if(!prevRel||Math.abs(rel.strength-prevRel.strength)>=10){return true;}}// Check action changes\nif(current.current_action!==previous.current_action){return true;}return false;}getTraitChanges(current,previous){if(!previous)return{};const changes={};for(const trait in current.traits){const diff=current.traits[trait]-previous.traits[trait];if(Math.abs(diff)>=1){changes[trait]=diff;}}return changes;}getRelationshipChanges(current,previous){if(!previous)return{added:[],removed:[],modified:[]};const changes={added:[],removed:[],modified:[]};// Find added relationships\nfor(const rel of current.relationships||[]){var _previous$relationshi3;const prevRel=(_previous$relationshi3=previous.relationships)===null||_previous$relationshi3===void 0?void 0:_previous$relationshi3.find(r=>r.character===rel.character);if(!prevRel){changes.added.push(rel);}else if(Math.abs(rel.strength-prevRel.strength)>=5){changes.modified.push({...rel,previousStrength:prevRel.strength});}}// Find removed relationships\nfor(const prevRel of previous.relationships||[]){var _current$relationship2;const currentRel=(_current$relationship2=current.relationships)===null||_current$relationship2===void 0?void 0:_current$relationship2.find(r=>r.character===prevRel.character);if(!currentRel){changes.removed.push(prevRel);}}return changes;}getGroupedStats(npcs){const stats={houses:{},genders:{},locations:{}};npcs.forEach(npc=>{// Count by house\nstats.houses[npc.house]=(stats.houses[npc.house]||0)+1;// Count by gender\nstats.genders[npc.gender]=(stats.genders[npc.gender]||0)+1;// Count by location\nstats.locations[npc.location]=(stats.locations[npc.location]||0)+1;});return stats;}getHouseColor(house){const houseColors={'Stark':'#8B9DC3','Lannister':'#FFD700','Targaryen':'#8B0000','Baratheon':'#FFD700','Greyjoy':'#2F4F4F','Martell':'#FF8C00','Tyrell':'#228B22','Arryn':'#87CEEB','Tully':'#4682B4','Frey':'#696969','Bolton':'#8B0000','Mormont':'#8B4513','Reed':'#556B2F','Karstark':'#708090','Umber':'#2F4F4F'};return houseColors[house]||'#666666';}validateNPCData(npcs){if(!Array.isArray(npcs)){throw new Error('NPCs data must be an array');}for(const npc of npcs){if(!npc.id||!npc.name||!npc.house){throw new Error(`Invalid NPC data: missing required fields for ${npc.name||'unknown'}`);}if(!npc.traits||typeof npc.traits!=='object'){throw new Error(`Invalid traits data for NPC ${npc.name}`);}}return true;}}export default new NPCService();","map":{"version":3,"names":["NPCService","formatNPCDisplay","npc","previousNpcs","previousNpc","find","p","id","displayData","hasChanges","hasSignificantChanges","traitChanges","getTraitChanges","relationshipChanges","getRelationshipChanges","current","previous","_current$relationship","_previous$relationshi","traitThreshold","trait","traits","Math","abs","relationships","length","rel","_previous$relationshi2","prevRel","r","character","strength","current_action","changes","diff","added","removed","modified","_previous$relationshi3","push","previousStrength","_current$relationship2","currentRel","getGroupedStats","npcs","stats","houses","genders","locations","forEach","house","gender","location","getHouseColor","houseColors","validateNPCData","Array","isArray","Error","name"],"sources":["C:/Users/win10/Documents/GitHub/AliveNPC-Engine/src/services/npcService.js"],"sourcesContent":["class NPCService {\n  formatNPCDisplay(npc, previousNpcs) {\n    const previousNpc = previousNpcs?.find(p => p.id === npc.id);\n    \n    return {\n      ...npc,\n      displayData: {\n        hasChanges: this.hasSignificantChanges(npc, previousNpc),\n        traitChanges: this.getTraitChanges(npc, previousNpc),\n        relationshipChanges: this.getRelationshipChanges(npc, previousNpc)\n      }\n    };\n  }\n\n  hasSignificantChanges(current, previous) {\n    if (!previous) return false;\n    \n    // Check trait changes\n    const traitThreshold = 5;\n    for (const trait in current.traits) {\n      if (Math.abs(current.traits[trait] - previous.traits[trait]) >= traitThreshold) {\n        return true;\n      }\n    }\n    \n    // Check relationship changes\n    if (current.relationships?.length !== previous.relationships?.length) {\n      return true;\n    }\n    \n    // Check for relationship strength changes\n    for (const rel of current.relationships || []) {\n      const prevRel = previous.relationships?.find(r => r.character === rel.character);\n      if (!prevRel || Math.abs(rel.strength - prevRel.strength) >= 10) {\n        return true;\n      }\n    }\n    \n    // Check action changes\n    if (current.current_action !== previous.current_action) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  getTraitChanges(current, previous) {\n    if (!previous) return {};\n    \n    const changes = {};\n    for (const trait in current.traits) {\n      const diff = current.traits[trait] - previous.traits[trait];\n      if (Math.abs(diff) >= 1) {\n        changes[trait] = diff;\n      }\n    }\n    return changes;\n  }\n\n  getRelationshipChanges(current, previous) {\n    if (!previous) return { added: [], removed: [], modified: [] };\n    \n    const changes = { added: [], removed: [], modified: [] };\n    \n    // Find added relationships\n    for (const rel of current.relationships || []) {\n      const prevRel = previous.relationships?.find(r => r.character === rel.character);\n      if (!prevRel) {\n        changes.added.push(rel);\n      } else if (Math.abs(rel.strength - prevRel.strength) >= 5) {\n        changes.modified.push({ ...rel, previousStrength: prevRel.strength });\n      }\n    }\n    \n    // Find removed relationships\n    for (const prevRel of previous.relationships || []) {\n      const currentRel = current.relationships?.find(r => r.character === prevRel.character);\n      if (!currentRel) {\n        changes.removed.push(prevRel);\n      }\n    }\n    \n    return changes;\n  }\n\n  getGroupedStats(npcs) {\n    const stats = {\n      houses: {},\n      genders: {},\n      locations: {}\n    };\n\n    npcs.forEach(npc => {\n      // Count by house\n      stats.houses[npc.house] = (stats.houses[npc.house] || 0) + 1;\n      \n      // Count by gender\n      stats.genders[npc.gender] = (stats.genders[npc.gender] || 0) + 1;\n      \n      // Count by location\n      stats.locations[npc.location] = (stats.locations[npc.location] || 0) + 1;\n    });\n\n    return stats;\n  }\n\n  getHouseColor(house) {\n    const houseColors = {\n      'Stark': '#8B9DC3',\n      'Lannister': '#FFD700',\n      'Targaryen': '#8B0000',\n      'Baratheon': '#FFD700',\n      'Greyjoy': '#2F4F4F',\n      'Martell': '#FF8C00',\n      'Tyrell': '#228B22',\n      'Arryn': '#87CEEB',\n      'Tully': '#4682B4',\n      'Frey': '#696969',\n      'Bolton': '#8B0000',\n      'Mormont': '#8B4513',\n      'Reed': '#556B2F',\n      'Karstark': '#708090',\n      'Umber': '#2F4F4F'\n    };\n    \n    return houseColors[house] || '#666666';\n  }\n\n  validateNPCData(npcs) {\n    if (!Array.isArray(npcs)) {\n      throw new Error('NPCs data must be an array');\n    }\n    \n    for (const npc of npcs) {\n      if (!npc.id || !npc.name || !npc.house) {\n        throw new Error(`Invalid NPC data: missing required fields for ${npc.name || 'unknown'}`);\n      }\n      \n      if (!npc.traits || typeof npc.traits !== 'object') {\n        throw new Error(`Invalid traits data for NPC ${npc.name}`);\n      }\n    }\n    \n    return true;\n  }\n}\n\nexport default new NPCService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}