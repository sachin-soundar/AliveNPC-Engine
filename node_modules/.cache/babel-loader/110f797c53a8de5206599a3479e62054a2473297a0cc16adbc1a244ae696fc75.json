{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nconst useWorldEvents = () => {\n  _s();\n  const [worldEvents, setWorldEvents] = useState([]);\n  const [currentEventIndex, setCurrentEventIndex] = useState(0);\n  const [customEvent, setCustomEvent] = useState('');\n  const loadSampleEvents = useCallback(() => {\n    const sampleEvents = [{\n      event_id: 1,\n      title: \"Lord Jon Arryn of House Arryn dies mysteriously\",\n      description: \"The Hand of the King dies suddenly, creating a power vacuum in King's Landing\",\n      political_context: {\n        house_stark: \"Ned Stark of House Stark reluctantly accepts Hand position, honor compels duty to realm\"\n      },\n      cascading_effects: [\"Power vacuum in King's Landing\", \"Stark family travels south\"]\n    }];\n    setWorldEvents(sampleEvents);\n  }, []);\n  const loadWorldQuest = useCallback(async () => {\n    try {\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n      setCurrentEventIndex(0);\n      console.log('World Quest loaded successfully');\n    } catch (error) {\n      console.error('Error loading world events:', error);\n      alert('Failed to load World Quest. Please check if world_events.json exists.');\n    }\n  }, []);\n  const loadDefaultEvents = useCallback(async () => {\n    try {\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n    } catch (error) {\n      console.error('Error loading default events:', error);\n      loadSampleEvents();\n    }\n  }, [loadSampleEvents]);\n  const restartWorld = useCallback(() => {\n    setCurrentEventIndex(0);\n    console.log('World restarted - reset to first event');\n  }, []);\n  const nextEvent = useCallback(() => {\n    setCurrentEventIndex(prev => prev + 1);\n  }, []);\n  const createCustomEvent = useCallback(eventTitle => {\n    return {\n      event_id: 999,\n      title: eventTitle,\n      description: \"Custom event triggered by user\",\n      political_context: {},\n      cascading_effects: []\n    };\n  }, []);\n  return {\n    worldEvents,\n    currentEventIndex,\n    customEvent,\n    setCustomEvent,\n    loadWorldQuest,\n    loadDefaultEvents,\n    restartWorld,\n    nextEvent,\n    createCustomEvent\n  };\n};\n_s(useWorldEvents, \"/xQoxtcXmjqQYMFgflGZ6TFepEY=\");\nexport default useWorldEvents;","map":{"version":3,"names":["useState","useCallback","useWorldEvents","_s","worldEvents","setWorldEvents","currentEventIndex","setCurrentEventIndex","customEvent","setCustomEvent","loadSampleEvents","sampleEvents","event_id","title","description","political_context","house_stark","cascading_effects","loadWorldQuest","eventsResponse","fetch","eventsData","json","world_events","console","log","error","alert","loadDefaultEvents","restartWorld","nextEvent","prev","createCustomEvent","eventTitle"],"sources":["C:/Users/win10/Documents/GitHub/AliveNPC-Engine/src/hooks/useWorldEvents.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useWorldEvents = () => {\n  const [worldEvents, setWorldEvents] = useState([]);\n  const [currentEventIndex, setCurrentEventIndex] = useState(0);\n  const [customEvent, setCustomEvent] = useState('');\n\n  const loadSampleEvents = useCallback(() => {\n    const sampleEvents = [\n      {\n        event_id: 1,\n        title: \"Lord Jon Arryn of House Arryn dies mysteriously\",\n        description: \"The Hand of the King dies suddenly, creating a power vacuum in King's Landing\",\n        political_context: {\n          house_stark: \"Ned Stark of House Stark reluctantly accepts Hand position, honor compels duty to realm\"\n        },\n        cascading_effects: [\"Power vacuum in King's Landing\", \"Stark family travels south\"]\n      }\n    ];\n    setWorldEvents(sampleEvents);\n  }, []);\n\n  const loadWorldQuest = useCallback(async () => {\n    try {\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n      setCurrentEventIndex(0);\n      console.log('World Quest loaded successfully');\n    } catch (error) {\n      console.error('Error loading world events:', error);\n      alert('Failed to load World Quest. Please check if world_events.json exists.');\n    }\n  }, []);\n\n  const loadDefaultEvents = useCallback(async () => {\n    try {\n      const eventsResponse = await fetch('/world_events.json');\n      const eventsData = await eventsResponse.json();\n      setWorldEvents(eventsData.world_events || []);\n    } catch (error) {\n      console.error('Error loading default events:', error);\n      loadSampleEvents();\n    }\n  }, [loadSampleEvents]);\n\n  const restartWorld = useCallback(() => {\n    setCurrentEventIndex(0);\n    console.log('World restarted - reset to first event');\n  }, []);\n\n  const nextEvent = useCallback(() => {\n    setCurrentEventIndex(prev => prev + 1);\n  }, []);\n\n  const createCustomEvent = useCallback((eventTitle) => {\n    return {\n      event_id: 999,\n      title: eventTitle,\n      description: \"Custom event triggered by user\",\n      political_context: {},\n      cascading_effects: []\n    };\n  }, []);\n\n  return {\n    worldEvents,\n    currentEventIndex,\n    customEvent,\n    setCustomEvent,\n    loadWorldQuest,\n    loadDefaultEvents,\n    restartWorld,\n    nextEvent,\n    createCustomEvent\n  };\n};\n\nexport default useWorldEvents;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,gBAAgB,GAAGT,WAAW,CAAC,MAAM;IACzC,MAAMU,YAAY,GAAG,CACnB;MACEC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,iDAAiD;MACxDC,WAAW,EAAE,+EAA+E;MAC5FC,iBAAiB,EAAE;QACjBC,WAAW,EAAE;MACf,CAAC;MACDC,iBAAiB,EAAE,CAAC,gCAAgC,EAAE,4BAA4B;IACpF,CAAC,CACF;IACDZ,cAAc,CAACM,YAAY,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,cAAc,GAAGjB,WAAW,CAAC,YAAY;IAC7C,IAAI;MACF,MAAMkB,cAAc,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;MACxD,MAAMC,UAAU,GAAG,MAAMF,cAAc,CAACG,IAAI,CAAC,CAAC;MAC9CjB,cAAc,CAACgB,UAAU,CAACE,YAAY,IAAI,EAAE,CAAC;MAC7ChB,oBAAoB,CAAC,CAAC,CAAC;MACvBiB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,KAAK,CAAC,uEAAuE,CAAC;IAChF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAG3B,WAAW,CAAC,YAAY;IAChD,IAAI;MACF,MAAMkB,cAAc,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;MACxD,MAAMC,UAAU,GAAG,MAAMF,cAAc,CAACG,IAAI,CAAC,CAAC;MAC9CjB,cAAc,CAACgB,UAAU,CAACE,YAAY,IAAI,EAAE,CAAC;IAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDhB,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,MAAMmB,YAAY,GAAG5B,WAAW,CAAC,MAAM;IACrCM,oBAAoB,CAAC,CAAC,CAAC;IACvBiB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAG7B,WAAW,CAAC,MAAM;IAClCM,oBAAoB,CAACwB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAG/B,WAAW,CAAEgC,UAAU,IAAK;IACpD,OAAO;MACLrB,QAAQ,EAAE,GAAG;MACbC,KAAK,EAAEoB,UAAU;MACjBnB,WAAW,EAAE,gCAAgC;MAC7CC,iBAAiB,EAAE,CAAC,CAAC;MACrBE,iBAAiB,EAAE;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLb,WAAW;IACXE,iBAAiB;IACjBE,WAAW;IACXC,cAAc;IACdS,cAAc;IACdU,iBAAiB;IACjBC,YAAY;IACZC,SAAS;IACTE;EACF,CAAC;AACH,CAAC;AAAC7B,EAAA,CA1EID,cAAc;AA4EpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}